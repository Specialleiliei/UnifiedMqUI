{
  "request": {
    "type": "list"
  },
  "value": {
    "JMImplementation": {
      "type=MBeanServerDelegate": {
        "attr": {
          "ImplementationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The JMX implementation name (the name of this product)"
          },
          "MBeanServerId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The MBean server agent identification"
          },
          "ImplementationVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The JMX implementation version (the version of this product)."
          },
          "SpecificationVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The version of the JMX specification implemented by this product."
          },
          "SpecificationVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The vendor of the JMX specification implemented by this product."
          },
          "SpecificationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The full name of the JMX specification implemented by this product."
          },
          "ImplementationVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "the JMX implementation vendor (the vendor of this product)."
          }
        },
        "class": "javax.management.MBeanServerDelegate",
        "desc": "Represents  the MBean server from the management point of view."
      }
    },
    "jdk.management.jfr": {
      "type=FlightRecorder": {
        "op": {
          "getRecordingOptions": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "getRecordingOptions"
          },
          "takeSnapshot": {
            "args": [],
            "ret": "long",
            "desc": "takeSnapshot"
          },
          "closeRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "void",
            "desc": "closeRecording"
          },
          "newRecording": {
            "args": [],
            "ret": "long",
            "desc": "newRecording"
          },
          "openStream": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "javax.management.openmbean.TabularData",
                "desc": "p1"
              }
            ],
            "ret": "long",
            "desc": "openStream"
          },
          "setRecordingSettings": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "javax.management.openmbean.TabularData",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setRecordingSettings"
          },
          "cloneRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "boolean",
                "desc": "p1"
              }
            ],
            "ret": "long",
            "desc": "cloneRecording"
          },
          "setRecordingOptions": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "javax.management.openmbean.TabularData",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setRecordingOptions"
          },
          "copyTo": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "copyTo"
          },
          "startRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "void",
            "desc": "startRecording"
          },
          "closeStream": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "void",
            "desc": "closeStream"
          },
          "getRecordingSettings": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "getRecordingSettings"
          },
          "setPredefinedConfiguration": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setPredefinedConfiguration"
          },
          "readStream": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "[B",
            "desc": "readStream"
          },
          "setConfiguration": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setConfiguration"
          },
          "stopRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "boolean",
            "desc": "stopRecording"
          }
        },
        "attr": {
          "EventTypes": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "EventTypes"
          },
          "Recordings": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "Recordings"
          },
          "Configurations": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "Configurations"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "jdk.management.jfr.FlightRecorderMXBeanImpl",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "java.util.logging": {
      "type=Logging": {
        "op": {
          "getLoggerLevel": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "java.lang.String",
            "desc": "getLoggerLevel"
          },
          "getParentLoggerName": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "java.lang.String",
            "desc": "getParentLoggerName"
          },
          "setLoggerLevel": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setLoggerLevel"
          }
        },
        "attr": {
          "LoggerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "LoggerNames"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "java.lang": {
      "name=G1 Survivor Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Threading": {
        "op": {
          "getThreadCpuTime": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadCpuTime"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadCpuTime"
            }
          ],
          "getThreadInfo": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "int",
                  "desc": "p1"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "int",
                  "desc": "p1"
                }
              ],
              "ret": "javax.management.openmbean.CompositeData",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": "p2"
                },
                {
                  "name": "p3",
                  "type": "int",
                  "desc": "p3"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": "p2"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "javax.management.openmbean.CompositeData",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            }
          ],
          "findDeadlockedThreads": {
            "args": [],
            "ret": "[J",
            "desc": "findDeadlockedThreads"
          },
          "getThreadAllocatedBytes": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadAllocatedBytes"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadAllocatedBytes"
            }
          ],
          "getThreadUserTime": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadUserTime"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadUserTime"
            }
          ],
          "findMonitorDeadlockedThreads": {
            "args": [],
            "ret": "[J",
            "desc": "findMonitorDeadlockedThreads"
          },
          "resetPeakThreadCount": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakThreadCount"
          },
          "dumpAllThreads": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "boolean",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "dumpAllThreads"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "boolean",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                },
                {
                  "name": "p2",
                  "type": "int",
                  "desc": "p2"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "dumpAllThreads"
            }
          ]
        },
        "attr": {
          "ThreadAllocatedMemorySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadAllocatedMemorySupported"
          },
          "ThreadContentionMonitoringEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadContentionMonitoringEnabled"
          },
          "CurrentThreadAllocatedBytes": {
            "rw": false,
            "type": "long",
            "desc": "CurrentThreadAllocatedBytes"
          },
          "TotalStartedThreadCount": {
            "rw": false,
            "type": "long",
            "desc": "TotalStartedThreadCount"
          },
          "CurrentThreadUserTime": {
            "rw": false,
            "type": "long",
            "desc": "CurrentThreadUserTime"
          },
          "CurrentThreadCpuTimeSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CurrentThreadCpuTimeSupported"
          },
          "AllThreadIds": {
            "rw": false,
            "type": "[J",
            "desc": "AllThreadIds"
          },
          "PeakThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "PeakThreadCount"
          },
          "ThreadAllocatedMemoryEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadAllocatedMemoryEnabled"
          },
          "CurrentThreadCpuTime": {
            "rw": false,
            "type": "long",
            "desc": "CurrentThreadCpuTime"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "ThreadCpuTimeSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadCpuTimeSupported"
          },
          "ThreadContentionMonitoringSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadContentionMonitoringSupported"
          },
          "ThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "ThreadCount"
          },
          "ThreadCpuTimeEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadCpuTimeEnabled"
          },
          "ObjectMonitorUsageSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ObjectMonitorUsageSupported"
          },
          "SynchronizerUsageSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "SynchronizerUsageSupported"
          },
          "DaemonThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "DaemonThreadCount"
          }
        },
        "class": "com.sun.management.internal.HotSpotThreadImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Memory": {
        "op": {
          "gc": {
            "args": [],
            "ret": "void",
            "desc": "gc"
          }
        },
        "attr": {
          "ObjectPendingFinalizationCount": {
            "rw": false,
            "type": "int",
            "desc": "ObjectPendingFinalizationCount"
          },
          "Verbose": {
            "rw": true,
            "type": "boolean",
            "desc": "Verbose"
          },
          "HeapMemoryUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "HeapMemoryUsage"
          },
          "NonHeapMemoryUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "NonHeapMemoryUsage"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.MemoryImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=Metaspace,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Eden Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=OperatingSystem": {
        "attr": {
          "CommittedVirtualMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "CommittedVirtualMemorySize"
          },
          "FreePhysicalMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "FreePhysicalMemorySize"
          },
          "SystemLoadAverage": {
            "rw": false,
            "type": "double",
            "desc": "SystemLoadAverage"
          },
          "Arch": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Arch"
          },
          "ProcessCpuLoad": {
            "rw": false,
            "type": "double",
            "desc": "ProcessCpuLoad"
          },
          "FreeSwapSpaceSize": {
            "rw": false,
            "type": "long",
            "desc": "FreeSwapSpaceSize"
          },
          "TotalPhysicalMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "TotalPhysicalMemorySize"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "TotalSwapSpaceSize": {
            "rw": false,
            "type": "long",
            "desc": "TotalSwapSpaceSize"
          },
          "ProcessCpuTime": {
            "rw": false,
            "type": "long",
            "desc": "ProcessCpuTime"
          },
          "SystemCpuLoad": {
            "rw": false,
            "type": "double",
            "desc": "SystemCpuLoad"
          },
          "Version": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Version"
          },
          "AvailableProcessors": {
            "rw": false,
            "type": "int",
            "desc": "AvailableProcessors"
          }
        },
        "class": "com.sun.management.internal.OperatingSystemImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeCacheManager,type=MemoryManager": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.MemoryManagerImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeHeap 'non-nmethods',type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Old Gen,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=Compressed Class Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeHeap 'non-profiled nmethods',type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Old Generation,type=GarbageCollector": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "LastGcInfo": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "LastGcInfo"
          },
          "CollectionTime": {
            "rw": false,
            "type": "long",
            "desc": "CollectionTime"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionCount"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "com.sun.management.internal.GarbageCollectorExtImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=ClassLoading": {
        "attr": {
          "LoadedClassCount": {
            "rw": false,
            "type": "int",
            "desc": "LoadedClassCount"
          },
          "UnloadedClassCount": {
            "rw": false,
            "type": "long",
            "desc": "UnloadedClassCount"
          },
          "Verbose": {
            "rw": true,
            "type": "boolean",
            "desc": "Verbose"
          },
          "TotalLoadedClassCount": {
            "rw": false,
            "type": "long",
            "desc": "TotalLoadedClassCount"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ClassLoadingImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeHeap 'profiled nmethods',type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Young Generation,type=GarbageCollector": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "LastGcInfo": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "LastGcInfo"
          },
          "CollectionTime": {
            "rw": false,
            "type": "long",
            "desc": "CollectionTime"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionCount"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "com.sun.management.internal.GarbageCollectorExtImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Compilation": {
        "attr": {
          "CompilationTimeMonitoringSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CompilationTimeMonitoringSupported"
          },
          "TotalCompilationTime": {
            "rw": false,
            "type": "long",
            "desc": "TotalCompilationTime"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.CompilationImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=Metaspace Manager,type=MemoryManager": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.MemoryManagerImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Runtime": {
        "attr": {
          "SpecVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecVendor"
          },
          "ClassPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ClassPath"
          },
          "InputArguments": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "InputArguments"
          },
          "Uptime": {
            "rw": false,
            "type": "long",
            "desc": "Uptime"
          },
          "VmName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmName"
          },
          "StartTime": {
            "rw": false,
            "type": "long",
            "desc": "StartTime"
          },
          "VmVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmVersion"
          },
          "SpecName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecName"
          },
          "Pid": {
            "rw": false,
            "type": "long",
            "desc": "Pid"
          },
          "ManagementSpecVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ManagementSpecVersion"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "VmVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmVendor"
          },
          "LibraryPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "LibraryPath"
          },
          "BootClassPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "BootClassPath"
          },
          "SpecVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecVersion"
          },
          "SystemProperties": {
            "rw": false,
            "type": "javax.management.openmbean.TabularData",
            "desc": "SystemProperties"
          },
          "BootClassPathSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "BootClassPathSupported"
          }
        },
        "class": "sun.management.RuntimeImpl",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "org.apache.activemq": {
      "brokerName=localhost,connector=clientConnectors,connectorName=amqp,type=Broker": {
        "op": {
          "connectionCount": {
            "args": [],
            "ret": "int",
            "desc": "Connection count"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets the statistics"
          },
          "enableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Enables statistics gathering"
          },
          "disableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Disables statistics gathering"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "StatisticsEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Statistics gathering enabled"
          },
          "UpdateClusterClientsOnRemove": {
            "rw": false,
            "type": "boolean",
            "desc": "Update clients when a broker is removed from a network enabled."
          },
          "RebalanceClusterClients": {
            "rw": false,
            "type": "boolean",
            "desc": "Rebalance clients across the broker cluster enabled"
          },
          "UpdateClusterFilter": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Comma separated list of regex patterns to match broker names for cluster client updates."
          },
          "AllowLinkStealingEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Link Stealing enabled"
          },
          "UpdateClusterClients": {
            "rw": false,
            "type": "boolean",
            "desc": "Update client URL's when brokers leave/join a custer enabled"
          }
        },
        "class": "org.apache.activemq.broker.jmx.ConnectorView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,destinationName=TestQueue,destinationType=Queue,type=Broker": {
        "op": {
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "resume dispatch to consumers if paused"
          },
          "cursorSize": {
            "args": [],
            "ret": "int",
            "desc": "Number of messages available to be paged in by the cursor."
          },
          "moveMessageTo": {
            "args": [
              {
                "name": "messageId",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "destinationName",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Moves a message with the given JMS message ID into the specified destination."
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets statistics."
          },
          "getMessage": {
            "args": [
              {
                "name": "messageId",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.CompositeData",
            "desc": "View a message from the destination by JMS message ID."
          },
          "purge": {
            "args": [],
            "ret": "void",
            "desc": "Removes all of the messages in the queue."
          },
          "removeMessageGroup": {
            "args": [
              {
                "name": "groupName",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "remove a message group by its groupName"
          },
          "removeAllMessageGroups": {
            "args": [],
            "ret": "void",
            "desc": "emove all the message groups - will rebalance all message groups across consumers"
          },
          "pause": {
            "args": [],
            "ret": "void",
            "desc": "pause dispatch to consumers"
          },
          "removeMessage": {
            "args": [
              {
                "name": "messageId",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Remove a message from the destination by JMS message ID.  If the message has been dispatched, it cannot be deleted and false is returned."
          },
          "removeMatchingMessages": [
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "int",
              "desc": "Removes messages from the destination based on an SQL-92 selection on the message headers or XPATH on the body."
            },
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "maximumMessages",
                  "type": "int",
                  "desc": ""
                }
              ],
              "ret": "int",
              "desc": "Removes up to a specified number of messages from the destination based on an SQL-92 selection on the message headers or XPATH on the body."
            }
          ],
          "doesCursorHaveMessagesBuffered": {
            "args": [],
            "ret": "boolean",
            "desc": "Message cursor has buffered messages to deliver"
          },
          "moveMatchingMessagesTo": [
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "destinationName",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "maximumMessages",
                  "type": "int",
                  "desc": ""
                }
              ],
              "ret": "int",
              "desc": "Moves up to a specified number of messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
            },
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "destinationName",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "int",
              "desc": "Moves messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
            }
          ],
          "browseMessages": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "sendTextMessage": [
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            }
          ],
          "copyMatchingMessagesTo": [
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "destinationName",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "maximumMessages",
                  "type": "int",
                  "desc": ""
                }
              ],
              "ret": "int",
              "desc": "Copies up to a specified number of messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
            },
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "destinationName",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "int",
              "desc": "Copies messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
            }
          ],
          "doesCursorHaveSpace": {
            "args": [],
            "ret": "boolean",
            "desc": "Message cursor has memory space available"
          },
          "retryMessage": {
            "args": [
              {
                "name": "messageId",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Moves a message with the given JMS message back to its original destination"
          },
          "browseAsTable": [
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "retryMessages": {
            "args": [],
            "ret": "int",
            "desc": "Retries messages sent to the DLQ"
          },
          "copyMessageTo": {
            "args": [
              {
                "name": "messageId",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "destinationName",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Copies a message with the given JMS message ID into the specified destination."
          },
          "browse": [
            {
              "args": [],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination. Not HTML friendly."
            },
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            }
          ],
          "sendTextMessageWithProperties": [
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
            },
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "delimiter",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
            }
          ]
        },
        "attr": {
          "ProducerFlowControl": {
            "rw": true,
            "type": "boolean",
            "desc": "Flow control is enabled for producers"
          },
          "Options": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Destination options as name value pairs in a URL queryString"
          },
          "AlwaysRetroactive": {
            "rw": true,
            "type": "boolean",
            "desc": "Always treat consumers as retroactive"
          },
          "MemoryUsageByteCount": {
            "rw": false,
            "type": "long",
            "desc": "Memory used by undelivered messages in bytes"
          },
          "AverageBlockedTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time (ms) messages have been blocked by flow control"
          },
          "MemoryPercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the memory limit used"
          },
          "CursorMemoryUsage": {
            "rw": false,
            "type": "long",
            "desc": "Message cursor memory usage, in bytes."
          },
          "InFlightCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
          },
          "SendDuplicateFromStoreToDLQ": {
            "rw": false,
            "type": "boolean",
            "desc": "Config setting to send a duplicate from store message to the dead letter queue."
          },
          "Subscriptions": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Subscription MBeans matching this destination"
          },
          "CacheEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Caching is enabled"
          },
          "ForwardCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
          },
          "DLQ": {
            "rw": true,
            "type": "boolean",
            "desc": "Dead Letter Queue"
          },
          "StoreMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "The memory size of all messages in this destination's store."
          },
          "AverageEnqueueTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time a message was held on this destination."
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name of this destination."
          },
          "BlockedSends": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages blocked for flow control"
          },
          "TotalBlockedTime": {
            "rw": false,
            "type": "long",
            "desc": "Total time (ms) messages have been blocked by flow control"
          },
          "MaxAuditDepth": {
            "rw": true,
            "type": "int",
            "desc": "Max audit depth"
          },
          "QueueSize": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
          },
          "MaxPageSize": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of messages to be paged in"
          },
          "TempUsageLimit": {
            "rw": true,
            "type": "long",
            "desc": "Temp usage limit, in bytes, assigned to this destination."
          },
          "PrioritizedMessages": {
            "rw": false,
            "type": "boolean",
            "desc": "Prioritized messages is enabled"
          },
          "MemoryUsagePortion": {
            "rw": true,
            "type": "float",
            "desc": "Portion of memory from the broker memory limit for this destination"
          },
          "Paused": {
            "rw": false,
            "type": "boolean",
            "desc": "Dispatch to consumers is paused"
          },
          "EnqueueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been sent to the destination."
          },
          "MessageGroups": {
            "rw": false,
            "type": "java.util.Map",
            "desc": "Map of groupNames and ConsumerIds"
          },
          "TempUsagePercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the temp usage limit used"
          },
          "ConsumerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of consumers subscribed to this destination."
          },
          "AverageMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Average message size on this destination"
          },
          "CursorFull": {
            "rw": false,
            "type": "boolean",
            "desc": "Message cusor has reached its memory limit for paged in messages"
          },
          "MaxProducersToAudit": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of producers to audit"
          },
          "ExpiredCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been expired."
          },
          "CursorPercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "Percentage of memory limit used"
          },
          "MinEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The shortest time a message was held on this destination"
          },
          "DuplicateFromStoreCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of duplicate messages that have been paged-in from the store."
          },
          "MemoryLimit": {
            "rw": true,
            "type": "long",
            "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
          },
          "MinMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Min message size on this destination"
          },
          "DispatchCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
          },
          "MaxEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The longest time a message was held on this destination"
          },
          "DequeueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been acknowledged (and removed) from the destination."
          },
          "BlockedProducerWarningInterval": {
            "rw": true,
            "type": "long",
            "desc": "Blocked Producer Warning Interval"
          },
          "ProducerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of producers attached to this destination"
          },
          "MessageGroupType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "group  implementation (simple,bucket,cached)"
          },
          "MaxMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Max message size on this destination"
          },
          "UseCache": {
            "rw": true,
            "type": "boolean",
            "desc": "Caching is allowed"
          },
          "SlowConsumerStrategy": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "Optional slowConsumer handler MBean for this destination"
          }
        },
        "class": "org.apache.activemq.broker.jmx.QueueView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,clientId=ID_eleven-56097-1747728166138-2_1,consumerId=ID_eleven-56097-1747728166138-3_1_-1_1,destinationName=ActiveMQ.Advisory.TempQueue_ActiveMQ.Advisory.TempTopic,destinationType=Topic,endpoint=Consumer,type=Broker": {
        "op": {
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets statistics."
          },
          "isMatchingTopic": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Returns true if the subscription (which may be using wildcards) matches the given topic name"
          },
          "isMatchingQueue": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Returns true if the subscription (which may be using wildcards) matches the given queue name"
          }
        },
        "attr": {
          "Retroactive": {
            "rw": false,
            "type": "boolean",
            "desc": "The subscriber is retroactive (tries to receive broadcasted topic messages sent prior to connecting)"
          },
          "Exclusive": {
            "rw": false,
            "type": "boolean",
            "desc": "The subscriber is exclusive (no other subscribers may receive messages from the destination as long as this one is)"
          },
          "SlowConsumer": {
            "rw": false,
            "type": "boolean",
            "desc": "Returns true if the subscription is slow"
          },
          "DispatchAsync": {
            "rw": false,
            "type": "boolean",
            "desc": "Is the consumer configured for Async Dispatch"
          },
          "DestinationTemporary": {
            "rw": false,
            "type": "boolean",
            "desc": "Subscription is on a temporary Queue/Topic"
          },
          "ConnectionId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ID of the Connection the Subscription is on."
          },
          "MaximumPendingMessageLimit": {
            "rw": false,
            "type": "int",
            "desc": "The maximum number of pending messages allowed (in addition to the prefetch size)."
          },
          "SubscriptionId": {
            "rw": false,
            "type": "long",
            "desc": "ID of the Subscription."
          },
          "Network": {
            "rw": false,
            "type": "boolean",
            "desc": "Subscription was created by a demand-forwarding network bridge"
          },
          "DestinationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of the destination the subscription is on."
          },
          "ClientId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "JMS Client id of the Connection the Subscription is on."
          },
          "DestinationQueue": {
            "rw": false,
            "type": "boolean",
            "desc": "Subscription is on a Queue"
          },
          "SessionId": {
            "rw": false,
            "type": "long",
            "desc": "ID of the Session the Subscription is on."
          },
          "EnqueueCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that matched the subscription."
          },
          "Selector": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The SQL-92 message header selector or XPATH body selector of the subscription."
          },
          "DestinationTopic": {
            "rw": false,
            "type": "boolean",
            "desc": "Subscription is on a Topic"
          },
          "UserName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "User Name used to authorize creation of this Subscription"
          },
          "Priority": {
            "rw": false,
            "type": "byte",
            "desc": "The subscription priority"
          },
          "DispatchedQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "Number of messages dispatched awaiting acknowledgement."
          },
          "PendingQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "Number of messages pending delivery."
          },
          "Connection": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName of the Connection that created this Subscription"
          },
          "MessageCountAwaitingAcknowledge": {
            "rw": false,
            "type": "int",
            "desc": "Number of messages dispatched awaiting acknowledgement."
          },
          "SubscriptionName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of the subscription (durable subscriptions only)."
          },
          "PrefetchSize": {
            "rw": false,
            "type": "int",
            "desc": "Number of messages to pre-fetch and dispatch to the client."
          },
          "MaximumPendingQueueSize": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of messages that can be pending"
          },
          "Active": {
            "rw": false,
            "type": "boolean",
            "desc": "Subscription is active (connected and receiving messages)."
          },
          "DiscardedCount": {
            "rw": false,
            "type": "int",
            "desc": "Number of messages discared due to being a slow consumer"
          },
          "NoLocal": {
            "rw": false,
            "type": "boolean",
            "desc": "The subscription ignores local messages."
          },
          "Durable": {
            "rw": false,
            "type": "boolean",
            "desc": "The subscription is persistent."
          },
          "DequeueCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages were sent to and acknowledge by the client."
          },
          "ConsumedCount": {
            "rw": false,
            "type": "long",
            "desc": "Messages consumed"
          },
          "DispatchedCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that sent to the client."
          }
        },
        "class": "org.apache.activemq.broker.jmx.TopicSubscriptionView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,clientId=ID_eleven-60793-1747729261767-5_1,endpoint=dynamicProducer,producerId=ID_eleven-60793-1747729261767-6_1_1_1,type=Broker": {
        "op": {
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets statistics."
          },
          "resetFlowControlStats": {
            "args": [],
            "ret": "void",
            "desc": "reset flow control state"
          }
        },
        "attr": {
          "DestinationTopic": {
            "rw": false,
            "type": "boolean",
            "desc": "Producer is on a Topic"
          },
          "UserName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "User Name used to authorize creation of this Producer"
          },
          "ProducerId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ID of the Producer."
          },
          "DispatchAsync": {
            "rw": false,
            "type": "boolean",
            "desc": "Is the producer configured for Async Dispatch"
          },
          "TotalTimeBlocked": {
            "rw": false,
            "type": "long",
            "desc": "total time (ms) Producer Blocked For Flow Control"
          },
          "DestinationTemporary": {
            "rw": false,
            "type": "boolean",
            "desc": "Producer is on a temporary Queue/Topic"
          },
          "ConnectionId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ID of the Connection the Producer is on."
          },
          "ProducerBlocked": {
            "rw": false,
            "type": "boolean",
            "desc": "is the producer blocked for Flow Control"
          },
          "DestinationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of the destionation the Producer is on."
          },
          "ClientId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "JMS Client id of the Connection the Producer is on."
          },
          "PercentageBlocked": {
            "rw": false,
            "type": "int",
            "desc": "percentage of sends Producer Blocked for Flow Control"
          },
          "DestinationQueue": {
            "rw": false,
            "type": "boolean",
            "desc": "Producer is on a Queue"
          },
          "SentCount": {
            "rw": false,
            "type": "long",
            "desc": "Messages dispatched by Producer"
          },
          "SessionId": {
            "rw": false,
            "type": "long",
            "desc": "ID of the Session the Producer is on."
          },
          "ProducerWindowSize": {
            "rw": false,
            "type": "int",
            "desc": "Configured Window Size for the Producer"
          }
        },
        "class": "org.apache.activemq.broker.jmx.ProducerView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,name=JMS,service=JobScheduler,type=Broker": {
        "op": {
          "removeJob": {
            "args": [
              {
                "name": "jobId",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "remove jobs with matching jobId"
          },
          "removeAllJobsAtScheduledTime": {
            "args": [
              {
                "name": "time: yyyy-MM-dd hh:mm:ss",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "remove jobs with matching execution time"
          },
          "getExecutionCount": {
            "args": [
              {
                "name": "jobId",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "get the next time a job is due to be scheduled "
          },
          "getAllJobs": {
            "args": [
              {
                "name": "start: yyyy-MM-dd hh:mm:ss",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "finish: yyyy-MM-dd hh:mm:ss",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "get the scheduled Jobs in the Store within the time range. Not HTML friendly "
          },
          "removeAllJobs": [
            {
              "args": [],
              "ret": "void",
              "desc": "remove all scheduled jobs"
            },
            {
              "args": [
                {
                  "name": "start: yyyy-MM-dd hh:mm:ss",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "finish: yyyy-MM-dd hh:mm:ss",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "remove all scheduled jobs between time ranges "
            }
          ]
        },
        "attr": {
          "AllJobs": {
            "rw": false,
            "type": "javax.management.openmbean.TabularData",
            "desc": "get the scheduled Jobs in the Store. Not HTML friendly "
          },
          "DelayedMessageCount": {
            "rw": false,
            "type": "int",
            "desc": "get the number of delayed message"
          },
          "NextScheduleJobs": {
            "rw": false,
            "type": "javax.management.openmbean.TabularData",
            "desc": "get the next job(s) to be scheduled. Not HTML friendly "
          },
          "ScheduledMessageCount": {
            "rw": false,
            "type": "int",
            "desc": "get the number of scheduled message (basically message in the scheduler"
          },
          "NextScheduleTime": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "get the next time a job is due to be scheduled "
          }
        },
        "class": "org.apache.activemq.broker.jmx.JobSchedulerView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,service=Health,type=Broker": {
        "op": {
          "healthList": {
            "args": [],
            "ret": "java.util.List",
            "desc": "List of warnings and errors about the current health of the Broker - empty list is Good!"
          },
          "healthStatus": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "String representation of current Broker state"
          },
          "health": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "CurrentStatus": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "String representation of current Broker state"
          }
        },
        "class": "org.apache.activemq.broker.jmx.HealthView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,type=Broker": {
        "op": {
          "stopGracefully": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "long",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Poll for queues matching queueName are empty before stopping"
          },
          "addQueue": {
            "args": [
              {
                "name": "name",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Adds a Queue destination to the broker."
          },
          "createDurableSubscriber": {
            "args": [
              {
                "name": "clientId",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "subscriberName",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "topicName",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.ObjectName",
            "desc": "Creates a new durable topic subscriber."
          },
          "getTransportConnectorByType": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "The url of transport connector by it's type; e.g. tcp, stomp, ssl, etc."
          },
          "restart": {
            "args": [],
            "ret": "void",
            "desc": "Restart the broker and all its components."
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Reset all broker statistics."
          },
          "destroyDurableSubscriber": {
            "args": [
              {
                "name": "clientId",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "subscriberName",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Destroys a durable subscriber."
          },
          "enableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Enable broker statistics."
          },
          "disableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Disable broker statistics."
          },
          "removeTopic": {
            "args": [
              {
                "name": "name",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Removes a Topic destination from the broker."
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "reloadLog4jProperties": {
            "args": [],
            "ret": "void",
            "desc": "Reloads log4j.properties from the classpath."
          },
          "addNetworkConnector": {
            "args": [
              {
                "name": "discoveryAddress",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Adds a Network Connector to the broker."
          },
          "browseQueue": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "Operation exposed for management"
          },
          "addConnector": {
            "args": [
              {
                "name": "discoveryAddress",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Adds a Connector to the broker."
          },
          "queryTopics": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Query topics"
          },
          "terminateJVM": {
            "args": [
              {
                "name": "exitCode",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Shuts down the JVM."
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop the broker and all its components."
          },
          "removeQueue": {
            "args": [
              {
                "name": "name",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Removes a Queue destination from the broker."
          },
          "addTopic": {
            "args": [
              {
                "name": "name",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Adds a Topic destination to the broker."
          },
          "removeNetworkConnector": {
            "args": [
              {
                "name": "connectorName",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Removes a Network Connector from the broker."
          },
          "gc": {
            "args": [],
            "ret": "void",
            "desc": "Runs the Garbage Collector."
          },
          "queryQueues": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Query queues"
          },
          "removeConnector": {
            "args": [
              {
                "name": "connectorName",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Removes a Connector from the broker."
          }
        },
        "attr": {
          "StatisticsEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Broker statistics enabled."
          },
          "TotalMessageCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of unacknowledged messages on the broker."
          },
          "TempPercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "Percent of temp limit used."
          },
          "TotalConnectionsCount": {
            "rw": false,
            "type": "long",
            "desc": "Attribute exposed for management"
          },
          "TemporaryQueueSubscribers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Temporary Queue Subscribers."
          },
          "MemoryPercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "Percent of memory limit used."
          },
          "TransportConnectors": {
            "rw": false,
            "type": "java.util.Map",
            "desc": "The map of all defined transport connectors, with transport name as a key"
          },
          "InactiveDurableTopicSubscribers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Inactive (disconnected persistent) topic subscribers"
          },
          "StoreLimit": {
            "rw": true,
            "type": "long",
            "desc": "Disk limit, in bytes, used for persistent messages before producers are blocked."
          },
          "TotalProducerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of message producers active on destinations on the broker."
          },
          "CurrentConnectionsCount": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "TopicProducers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Topic Producers."
          },
          "QueueProducers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Queue Producers."
          },
          "JMSJobScheduler": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "JMSJobScheduler"
          },
          "VMURL": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The url of the VM connector"
          },
          "UptimeMillis": {
            "rw": false,
            "type": "long",
            "desc": "Uptime of the broker in milliseconds."
          },
          "TemporaryTopicProducers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Temporary Topic Producers."
          },
          "TemporaryQueueProducers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Temporary Queue Producers."
          },
          "TotalDequeueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been acknowledged or discarded on the broker."
          },
          "JobSchedulerStorePercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "Percent of job store limit used."
          },
          "Topics": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Topics (broadcasted 'queues'); generally system information."
          },
          "DurableTopicSubscribers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Durable (persistent) topic subscribers"
          },
          "Uptime": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Uptime of the broker."
          },
          "QueueSubscribers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Queue Subscribers."
          },
          "AverageMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Average message size on this broker"
          },
          "BrokerId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The unique id of the broker."
          },
          "DataDirectory": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The location of the data directory"
          },
          "Persistent": {
            "rw": false,
            "type": "boolean",
            "desc": "Messages are synchronized to disk."
          },
          "TopicSubscribers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Topic Subscribers"
          },
          "BrokerVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The version of the broker."
          },
          "TemporaryQueues": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Temporary Queues; generally temporary message response holders."
          },
          "BrokerName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of the broker."
          },
          "MemoryLimit": {
            "rw": true,
            "type": "long",
            "desc": "Memory limit, in bytes, used for holding undelivered messages before paging to temporary storage."
          },
          "MinMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Min message size on this broker"
          },
          "Slave": {
            "rw": false,
            "type": "boolean",
            "desc": "Slave broker."
          },
          "TotalEnqueueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been sent to the broker."
          },
          "DynamicDestinationProducers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Dynamic Destination Producers."
          },
          "TempLimit": {
            "rw": true,
            "type": "long",
            "desc": "Disk limit, in bytes, used for non-persistent messages and temporary data before producers are blocked."
          },
          "TemporaryTopicSubscribers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Temporary Topic Subscribers."
          },
          "TemporaryTopics": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Temporary Topics; generally unused."
          },
          "JobSchedulerStoreLimit": {
            "rw": true,
            "type": "long",
            "desc": "Disk limit, in bytes, used for scheduled messages before producers are blocked."
          },
          "StorePercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "Percent of store limit used."
          },
          "TotalConsumerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of message consumers subscribed to destinations on the broker."
          },
          "Queues": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Standard Queues containing AIE messages."
          },
          "MaxMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Max message size on this broker"
          }
        },
        "class": "org.apache.activemq.broker.jmx.BrokerView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,connector=clientConnectors,connectorName=mqtt,type=Broker": {
        "op": {
          "connectionCount": {
            "args": [],
            "ret": "int",
            "desc": "Connection count"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets the statistics"
          },
          "enableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Enables statistics gathering"
          },
          "disableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Disables statistics gathering"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "StatisticsEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Statistics gathering enabled"
          },
          "UpdateClusterClientsOnRemove": {
            "rw": false,
            "type": "boolean",
            "desc": "Update clients when a broker is removed from a network enabled."
          },
          "RebalanceClusterClients": {
            "rw": false,
            "type": "boolean",
            "desc": "Rebalance clients across the broker cluster enabled"
          },
          "UpdateClusterFilter": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Comma separated list of regex patterns to match broker names for cluster client updates."
          },
          "AllowLinkStealingEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Link Stealing enabled"
          },
          "UpdateClusterClients": {
            "rw": false,
            "type": "boolean",
            "desc": "Update client URL's when brokers leave/join a custer enabled"
          }
        },
        "class": "org.apache.activemq.broker.jmx.ConnectorView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,destinationName=ActiveMQ.Advisory.MasterBroker,destinationType=Topic,type=Broker": {
        "op": {
          "browseMessages": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "sendTextMessage": [
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            }
          ],
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets statistics."
          },
          "browseAsTable": [
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "browse": [
            {
              "args": [],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination. Not HTML friendly."
            },
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            }
          ],
          "sendTextMessageWithProperties": [
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
            },
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "delimiter",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
            }
          ]
        },
        "attr": {
          "ProducerFlowControl": {
            "rw": true,
            "type": "boolean",
            "desc": "Flow control is enabled for producers"
          },
          "Options": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Destination options as name value pairs in a URL queryString"
          },
          "AlwaysRetroactive": {
            "rw": true,
            "type": "boolean",
            "desc": "Always treat consumers as retroactive"
          },
          "MemoryUsageByteCount": {
            "rw": false,
            "type": "long",
            "desc": "Memory used by undelivered messages in bytes"
          },
          "AverageBlockedTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time (ms) messages have been blocked by flow control"
          },
          "MemoryPercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the memory limit used"
          },
          "InFlightCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
          },
          "SendDuplicateFromStoreToDLQ": {
            "rw": false,
            "type": "boolean",
            "desc": "Config setting to send a duplicate from store message to the dead letter queue."
          },
          "Subscriptions": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Subscription MBeans matching this destination"
          },
          "ForwardCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
          },
          "DLQ": {
            "rw": true,
            "type": "boolean",
            "desc": "Dead Letter Queue"
          },
          "StoreMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "The memory size of all messages in this destination's store."
          },
          "AverageEnqueueTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time a message was held on this destination."
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name of this destination."
          },
          "BlockedSends": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages blocked for flow control"
          },
          "TotalBlockedTime": {
            "rw": false,
            "type": "long",
            "desc": "Total time (ms) messages have been blocked by flow control"
          },
          "MaxAuditDepth": {
            "rw": true,
            "type": "int",
            "desc": "Max audit depth"
          },
          "QueueSize": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
          },
          "MaxPageSize": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of messages to be paged in"
          },
          "TempUsageLimit": {
            "rw": true,
            "type": "long",
            "desc": "Temp usage limit, in bytes, assigned to this destination."
          },
          "PrioritizedMessages": {
            "rw": false,
            "type": "boolean",
            "desc": "Prioritized messages is enabled"
          },
          "MemoryUsagePortion": {
            "rw": true,
            "type": "float",
            "desc": "Portion of memory from the broker memory limit for this destination"
          },
          "EnqueueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been sent to the destination."
          },
          "TempUsagePercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the temp usage limit used"
          },
          "ConsumerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of consumers subscribed to this destination."
          },
          "AverageMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Average message size on this destination"
          },
          "MaxProducersToAudit": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of producers to audit"
          },
          "ExpiredCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been expired."
          },
          "MinEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The shortest time a message was held on this destination"
          },
          "DuplicateFromStoreCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of duplicate messages that have been paged-in from the store."
          },
          "MemoryLimit": {
            "rw": true,
            "type": "long",
            "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
          },
          "MinMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Min message size on this destination"
          },
          "DispatchCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
          },
          "MaxEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The longest time a message was held on this destination"
          },
          "DequeueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been acknowledged (and removed) from the destination."
          },
          "BlockedProducerWarningInterval": {
            "rw": true,
            "type": "long",
            "desc": "Blocked Producer Warning Interval"
          },
          "ProducerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of producers attached to this destination"
          },
          "MaxMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Max message size on this destination"
          },
          "UseCache": {
            "rw": true,
            "type": "boolean",
            "desc": "Caching is allowed"
          },
          "SlowConsumerStrategy": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "Optional slowConsumer handler MBean for this destination"
          }
        },
        "class": "org.apache.activemq.broker.jmx.TopicView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,instanceName=KahaDBPersistenceAdapter[E_\\ide\\apache-activemq-5.16.8\\bin\\win64\\..\\..\\data\\kahadb_Index_E_\\ide\\apache-activemq-5.16.8\\bin\\win64\\..\\..\\data\\kahadb],service=PersistenceAdapter,type=Broker": {
        "op": {
          "resetStatistics": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Resets statistics."
          }
        },
        "attr": {
          "Transactions": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Inflight transactions."
          },
          "Size": {
            "rw": false,
            "type": "long",
            "desc": "Current size."
          },
          "Data": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Current data."
          },
          "Statistics": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Statistics related to the PersistentAdapter."
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name of this persistence adapter."
          }
        },
        "class": "org.apache.activemq.broker.jmx.PersistenceAdapterView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,connector=clientConnectors,connectorName=ws,type=Broker": {
        "op": {
          "connectionCount": {
            "args": [],
            "ret": "int",
            "desc": "Connection count"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets the statistics"
          },
          "enableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Enables statistics gathering"
          },
          "disableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Disables statistics gathering"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "StatisticsEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Statistics gathering enabled"
          },
          "UpdateClusterClientsOnRemove": {
            "rw": false,
            "type": "boolean",
            "desc": "Update clients when a broker is removed from a network enabled."
          },
          "RebalanceClusterClients": {
            "rw": false,
            "type": "boolean",
            "desc": "Rebalance clients across the broker cluster enabled"
          },
          "UpdateClusterFilter": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Comma separated list of regex patterns to match broker names for cluster client updates."
          },
          "AllowLinkStealingEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Link Stealing enabled"
          },
          "UpdateClusterClients": {
            "rw": false,
            "type": "boolean",
            "desc": "Update client URL's when brokers leave/join a custer enabled"
          }
        },
        "class": "org.apache.activemq.broker.jmx.ConnectorView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,connector=clientConnectors,connectorName=stomp,type=Broker": {
        "op": {
          "connectionCount": {
            "args": [],
            "ret": "int",
            "desc": "Connection count"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets the statistics"
          },
          "enableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Enables statistics gathering"
          },
          "disableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Disables statistics gathering"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "StatisticsEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Statistics gathering enabled"
          },
          "UpdateClusterClientsOnRemove": {
            "rw": false,
            "type": "boolean",
            "desc": "Update clients when a broker is removed from a network enabled."
          },
          "RebalanceClusterClients": {
            "rw": false,
            "type": "boolean",
            "desc": "Rebalance clients across the broker cluster enabled"
          },
          "UpdateClusterFilter": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Comma separated list of regex patterns to match broker names for cluster client updates."
          },
          "AllowLinkStealingEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Link Stealing enabled"
          },
          "UpdateClusterClients": {
            "rw": false,
            "type": "boolean",
            "desc": "Update client URL's when brokers leave/join a custer enabled"
          }
        },
        "class": "org.apache.activemq.broker.jmx.ConnectorView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,destinationName=ActiveMQ.Advisory.Connection,destinationType=Topic,type=Broker": {
        "op": {
          "browseMessages": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "sendTextMessage": [
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            }
          ],
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets statistics."
          },
          "browseAsTable": [
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "browse": [
            {
              "args": [],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination. Not HTML friendly."
            },
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            }
          ],
          "sendTextMessageWithProperties": [
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
            },
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "delimiter",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
            }
          ]
        },
        "attr": {
          "ProducerFlowControl": {
            "rw": true,
            "type": "boolean",
            "desc": "Flow control is enabled for producers"
          },
          "Options": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Destination options as name value pairs in a URL queryString"
          },
          "AlwaysRetroactive": {
            "rw": true,
            "type": "boolean",
            "desc": "Always treat consumers as retroactive"
          },
          "MemoryUsageByteCount": {
            "rw": false,
            "type": "long",
            "desc": "Memory used by undelivered messages in bytes"
          },
          "AverageBlockedTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time (ms) messages have been blocked by flow control"
          },
          "MemoryPercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the memory limit used"
          },
          "InFlightCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
          },
          "SendDuplicateFromStoreToDLQ": {
            "rw": false,
            "type": "boolean",
            "desc": "Config setting to send a duplicate from store message to the dead letter queue."
          },
          "Subscriptions": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Subscription MBeans matching this destination"
          },
          "ForwardCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
          },
          "DLQ": {
            "rw": true,
            "type": "boolean",
            "desc": "Dead Letter Queue"
          },
          "StoreMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "The memory size of all messages in this destination's store."
          },
          "AverageEnqueueTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time a message was held on this destination."
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name of this destination."
          },
          "BlockedSends": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages blocked for flow control"
          },
          "TotalBlockedTime": {
            "rw": false,
            "type": "long",
            "desc": "Total time (ms) messages have been blocked by flow control"
          },
          "MaxAuditDepth": {
            "rw": true,
            "type": "int",
            "desc": "Max audit depth"
          },
          "QueueSize": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
          },
          "MaxPageSize": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of messages to be paged in"
          },
          "TempUsageLimit": {
            "rw": true,
            "type": "long",
            "desc": "Temp usage limit, in bytes, assigned to this destination."
          },
          "PrioritizedMessages": {
            "rw": false,
            "type": "boolean",
            "desc": "Prioritized messages is enabled"
          },
          "MemoryUsagePortion": {
            "rw": true,
            "type": "float",
            "desc": "Portion of memory from the broker memory limit for this destination"
          },
          "EnqueueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been sent to the destination."
          },
          "TempUsagePercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the temp usage limit used"
          },
          "ConsumerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of consumers subscribed to this destination."
          },
          "AverageMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Average message size on this destination"
          },
          "MaxProducersToAudit": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of producers to audit"
          },
          "ExpiredCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been expired."
          },
          "MinEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The shortest time a message was held on this destination"
          },
          "DuplicateFromStoreCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of duplicate messages that have been paged-in from the store."
          },
          "MemoryLimit": {
            "rw": true,
            "type": "long",
            "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
          },
          "MinMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Min message size on this destination"
          },
          "DispatchCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
          },
          "MaxEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The longest time a message was held on this destination"
          },
          "DequeueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been acknowledged (and removed) from the destination."
          },
          "BlockedProducerWarningInterval": {
            "rw": true,
            "type": "long",
            "desc": "Blocked Producer Warning Interval"
          },
          "ProducerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of producers attached to this destination"
          },
          "MaxMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Max message size on this destination"
          },
          "UseCache": {
            "rw": true,
            "type": "boolean",
            "desc": "Caching is allowed"
          },
          "SlowConsumerStrategy": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "Optional slowConsumer handler MBean for this destination"
          }
        },
        "class": "org.apache.activemq.broker.jmx.TopicView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,connectionName=ID_eleven-56097-1747728166138-2_1,connectionViewType=clientId,connector=clientConnectors,connectorName=openwire,type=Broker": {
        "op": {
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets the statistics"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "RemoteAddress": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "source address for this connection"
          },
          "Producers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "The ObjectNames of all Producers created by this Connection"
          },
          "Active": {
            "rw": false,
            "type": "boolean",
            "desc": "Connection is active (both connected and receiving messages)."
          },
          "UserName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "User Name used to authorize creation of this connection"
          },
          "ActiveTransactionCount": {
            "rw": false,
            "type": "int",
            "desc": "The number of active transactions established on this Connection."
          },
          "DispatchQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "The number of messages pending dispatch"
          },
          "Connected": {
            "rw": false,
            "type": "boolean",
            "desc": "Connection is connected to the broker."
          },
          "Slow": {
            "rw": false,
            "type": "boolean",
            "desc": "Connection is slow."
          },
          "Consumers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "The ObjectNames of all Consumers created by this Connection"
          },
          "ClientId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "client id for this connection"
          },
          "OldestActiveTransactionDuration": {
            "rw": false,
            "type": "java.lang.Long",
            "desc": "The age in ms of the oldest active transaction established on this Connection."
          },
          "Blocked": {
            "rw": false,
            "type": "boolean",
            "desc": "Connection is blocked."
          }
        },
        "class": "org.apache.activemq.broker.jmx.ConnectionView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,service=Log4JConfiguration,type=Broker": {
        "op": {
          "setLogLevel": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Sets the logging level for the named logger."
          },
          "getLogLevel": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the current logging level of a named logger."
          },
          "reloadLog4jProperties": {
            "args": [],
            "ret": "void",
            "desc": "Reloads log4j.properties from the classpath."
          }
        },
        "attr": {
          "RootLogLevel": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "Returns the current logging level of the root logger."
          },
          "Loggers": {
            "rw": false,
            "type": "java.util.List",
            "desc": "List of all loggers that are available for configuration."
          }
        },
        "class": "org.apache.activemq.broker.jmx.Log4JConfigView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,connectionName=tcp_//127.0.0.1_60861,connectionViewType=remoteAddress,connector=clientConnectors,connectorName=openwire,type=Broker": {
        "op": {
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets the statistics"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "RemoteAddress": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "source address for this connection"
          },
          "Producers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "The ObjectNames of all Producers created by this Connection"
          },
          "Active": {
            "rw": false,
            "type": "boolean",
            "desc": "Connection is active (both connected and receiving messages)."
          },
          "UserName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "User Name used to authorize creation of this connection"
          },
          "ActiveTransactionCount": {
            "rw": false,
            "type": "int",
            "desc": "The number of active transactions established on this Connection."
          },
          "DispatchQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "The number of messages pending dispatch"
          },
          "Connected": {
            "rw": false,
            "type": "boolean",
            "desc": "Connection is connected to the broker."
          },
          "Slow": {
            "rw": false,
            "type": "boolean",
            "desc": "Connection is slow."
          },
          "Consumers": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "The ObjectNames of all Consumers created by this Connection"
          },
          "ClientId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "client id for this connection"
          },
          "OldestActiveTransactionDuration": {
            "rw": false,
            "type": "java.lang.Long",
            "desc": "The age in ms of the oldest active transaction established on this Connection."
          },
          "Blocked": {
            "rw": false,
            "type": "boolean",
            "desc": "Connection is blocked."
          }
        },
        "class": "org.apache.activemq.broker.jmx.ConnectionView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,clientId=ID_eleven-60793-1747729261767-5_1,consumerId=ID_eleven-60793-1747729261767-6_1_-1_1,destinationName=ActiveMQ.Advisory.TempQueue_ActiveMQ.Advisory.TempTopic,destinationType=Topic,endpoint=Consumer,type=Broker": {
        "op": {
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets statistics."
          },
          "isMatchingTopic": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Returns true if the subscription (which may be using wildcards) matches the given topic name"
          },
          "isMatchingQueue": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Returns true if the subscription (which may be using wildcards) matches the given queue name"
          }
        },
        "attr": {
          "Retroactive": {
            "rw": false,
            "type": "boolean",
            "desc": "The subscriber is retroactive (tries to receive broadcasted topic messages sent prior to connecting)"
          },
          "Exclusive": {
            "rw": false,
            "type": "boolean",
            "desc": "The subscriber is exclusive (no other subscribers may receive messages from the destination as long as this one is)"
          },
          "SlowConsumer": {
            "rw": false,
            "type": "boolean",
            "desc": "Returns true if the subscription is slow"
          },
          "DispatchAsync": {
            "rw": false,
            "type": "boolean",
            "desc": "Is the consumer configured for Async Dispatch"
          },
          "DestinationTemporary": {
            "rw": false,
            "type": "boolean",
            "desc": "Subscription is on a temporary Queue/Topic"
          },
          "ConnectionId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ID of the Connection the Subscription is on."
          },
          "MaximumPendingMessageLimit": {
            "rw": false,
            "type": "int",
            "desc": "The maximum number of pending messages allowed (in addition to the prefetch size)."
          },
          "SubscriptionId": {
            "rw": false,
            "type": "long",
            "desc": "ID of the Subscription."
          },
          "Network": {
            "rw": false,
            "type": "boolean",
            "desc": "Subscription was created by a demand-forwarding network bridge"
          },
          "DestinationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of the destination the subscription is on."
          },
          "ClientId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "JMS Client id of the Connection the Subscription is on."
          },
          "DestinationQueue": {
            "rw": false,
            "type": "boolean",
            "desc": "Subscription is on a Queue"
          },
          "SessionId": {
            "rw": false,
            "type": "long",
            "desc": "ID of the Session the Subscription is on."
          },
          "EnqueueCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that matched the subscription."
          },
          "Selector": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "The SQL-92 message header selector or XPATH body selector of the subscription."
          },
          "DestinationTopic": {
            "rw": false,
            "type": "boolean",
            "desc": "Subscription is on a Topic"
          },
          "UserName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "User Name used to authorize creation of this Subscription"
          },
          "Priority": {
            "rw": false,
            "type": "byte",
            "desc": "The subscription priority"
          },
          "DispatchedQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "Number of messages dispatched awaiting acknowledgement."
          },
          "PendingQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "Number of messages pending delivery."
          },
          "Connection": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName of the Connection that created this Subscription"
          },
          "MessageCountAwaitingAcknowledge": {
            "rw": false,
            "type": "int",
            "desc": "Number of messages dispatched awaiting acknowledgement."
          },
          "SubscriptionName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of the subscription (durable subscriptions only)."
          },
          "PrefetchSize": {
            "rw": false,
            "type": "int",
            "desc": "Number of messages to pre-fetch and dispatch to the client."
          },
          "MaximumPendingQueueSize": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of messages that can be pending"
          },
          "Active": {
            "rw": false,
            "type": "boolean",
            "desc": "Subscription is active (connected and receiving messages)."
          },
          "DiscardedCount": {
            "rw": false,
            "type": "int",
            "desc": "Number of messages discared due to being a slow consumer"
          },
          "NoLocal": {
            "rw": false,
            "type": "boolean",
            "desc": "The subscription ignores local messages."
          },
          "Durable": {
            "rw": false,
            "type": "boolean",
            "desc": "The subscription is persistent."
          },
          "DequeueCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages were sent to and acknowledge by the client."
          },
          "ConsumedCount": {
            "rw": false,
            "type": "long",
            "desc": "Messages consumed"
          },
          "DispatchedCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that sent to the client."
          }
        },
        "class": "org.apache.activemq.broker.jmx.TopicSubscriptionView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,destinationName=TestTopic,destinationType=Topic,type=Broker": {
        "op": {
          "browseMessages": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "sendTextMessage": [
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            }
          ],
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets statistics."
          },
          "browseAsTable": [
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "browse": [
            {
              "args": [],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination. Not HTML friendly."
            },
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            }
          ],
          "sendTextMessageWithProperties": [
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
            },
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "delimiter",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
            }
          ]
        },
        "attr": {
          "ProducerFlowControl": {
            "rw": true,
            "type": "boolean",
            "desc": "Flow control is enabled for producers"
          },
          "Options": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Destination options as name value pairs in a URL queryString"
          },
          "AlwaysRetroactive": {
            "rw": true,
            "type": "boolean",
            "desc": "Always treat consumers as retroactive"
          },
          "MemoryUsageByteCount": {
            "rw": false,
            "type": "long",
            "desc": "Memory used by undelivered messages in bytes"
          },
          "AverageBlockedTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time (ms) messages have been blocked by flow control"
          },
          "MemoryPercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the memory limit used"
          },
          "InFlightCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
          },
          "SendDuplicateFromStoreToDLQ": {
            "rw": false,
            "type": "boolean",
            "desc": "Config setting to send a duplicate from store message to the dead letter queue."
          },
          "Subscriptions": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Subscription MBeans matching this destination"
          },
          "ForwardCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
          },
          "DLQ": {
            "rw": true,
            "type": "boolean",
            "desc": "Dead Letter Queue"
          },
          "StoreMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "The memory size of all messages in this destination's store."
          },
          "AverageEnqueueTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time a message was held on this destination."
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name of this destination."
          },
          "BlockedSends": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages blocked for flow control"
          },
          "TotalBlockedTime": {
            "rw": false,
            "type": "long",
            "desc": "Total time (ms) messages have been blocked by flow control"
          },
          "MaxAuditDepth": {
            "rw": true,
            "type": "int",
            "desc": "Max audit depth"
          },
          "QueueSize": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
          },
          "MaxPageSize": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of messages to be paged in"
          },
          "TempUsageLimit": {
            "rw": true,
            "type": "long",
            "desc": "Temp usage limit, in bytes, assigned to this destination."
          },
          "PrioritizedMessages": {
            "rw": false,
            "type": "boolean",
            "desc": "Prioritized messages is enabled"
          },
          "MemoryUsagePortion": {
            "rw": true,
            "type": "float",
            "desc": "Portion of memory from the broker memory limit for this destination"
          },
          "EnqueueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been sent to the destination."
          },
          "TempUsagePercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the temp usage limit used"
          },
          "ConsumerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of consumers subscribed to this destination."
          },
          "AverageMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Average message size on this destination"
          },
          "MaxProducersToAudit": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of producers to audit"
          },
          "ExpiredCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been expired."
          },
          "MinEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The shortest time a message was held on this destination"
          },
          "DuplicateFromStoreCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of duplicate messages that have been paged-in from the store."
          },
          "MemoryLimit": {
            "rw": true,
            "type": "long",
            "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
          },
          "MinMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Min message size on this destination"
          },
          "DispatchCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
          },
          "MaxEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The longest time a message was held on this destination"
          },
          "DequeueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been acknowledged (and removed) from the destination."
          },
          "BlockedProducerWarningInterval": {
            "rw": true,
            "type": "long",
            "desc": "Blocked Producer Warning Interval"
          },
          "ProducerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of producers attached to this destination"
          },
          "MaxMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Max message size on this destination"
          },
          "UseCache": {
            "rw": true,
            "type": "boolean",
            "desc": "Caching is allowed"
          },
          "SlowConsumerStrategy": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "Optional slowConsumer handler MBean for this destination"
          }
        },
        "class": "org.apache.activemq.broker.jmx.TopicView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,destinationName=ActiveMQ.Advisory.Topic,destinationType=Topic,type=Broker": {
        "op": {
          "browseMessages": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "sendTextMessage": [
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            }
          ],
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets statistics."
          },
          "browseAsTable": [
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "browse": [
            {
              "args": [],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination. Not HTML friendly."
            },
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            }
          ],
          "sendTextMessageWithProperties": [
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
            },
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "delimiter",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
            }
          ]
        },
        "attr": {
          "ProducerFlowControl": {
            "rw": true,
            "type": "boolean",
            "desc": "Flow control is enabled for producers"
          },
          "Options": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Destination options as name value pairs in a URL queryString"
          },
          "AlwaysRetroactive": {
            "rw": true,
            "type": "boolean",
            "desc": "Always treat consumers as retroactive"
          },
          "MemoryUsageByteCount": {
            "rw": false,
            "type": "long",
            "desc": "Memory used by undelivered messages in bytes"
          },
          "AverageBlockedTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time (ms) messages have been blocked by flow control"
          },
          "MemoryPercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the memory limit used"
          },
          "InFlightCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
          },
          "SendDuplicateFromStoreToDLQ": {
            "rw": false,
            "type": "boolean",
            "desc": "Config setting to send a duplicate from store message to the dead letter queue."
          },
          "Subscriptions": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Subscription MBeans matching this destination"
          },
          "ForwardCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
          },
          "DLQ": {
            "rw": true,
            "type": "boolean",
            "desc": "Dead Letter Queue"
          },
          "StoreMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "The memory size of all messages in this destination's store."
          },
          "AverageEnqueueTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time a message was held on this destination."
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name of this destination."
          },
          "BlockedSends": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages blocked for flow control"
          },
          "TotalBlockedTime": {
            "rw": false,
            "type": "long",
            "desc": "Total time (ms) messages have been blocked by flow control"
          },
          "MaxAuditDepth": {
            "rw": true,
            "type": "int",
            "desc": "Max audit depth"
          },
          "QueueSize": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
          },
          "MaxPageSize": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of messages to be paged in"
          },
          "TempUsageLimit": {
            "rw": true,
            "type": "long",
            "desc": "Temp usage limit, in bytes, assigned to this destination."
          },
          "PrioritizedMessages": {
            "rw": false,
            "type": "boolean",
            "desc": "Prioritized messages is enabled"
          },
          "MemoryUsagePortion": {
            "rw": true,
            "type": "float",
            "desc": "Portion of memory from the broker memory limit for this destination"
          },
          "EnqueueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been sent to the destination."
          },
          "TempUsagePercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the temp usage limit used"
          },
          "ConsumerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of consumers subscribed to this destination."
          },
          "AverageMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Average message size on this destination"
          },
          "MaxProducersToAudit": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of producers to audit"
          },
          "ExpiredCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been expired."
          },
          "MinEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The shortest time a message was held on this destination"
          },
          "DuplicateFromStoreCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of duplicate messages that have been paged-in from the store."
          },
          "MemoryLimit": {
            "rw": true,
            "type": "long",
            "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
          },
          "MinMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Min message size on this destination"
          },
          "DispatchCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
          },
          "MaxEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The longest time a message was held on this destination"
          },
          "DequeueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been acknowledged (and removed) from the destination."
          },
          "BlockedProducerWarningInterval": {
            "rw": true,
            "type": "long",
            "desc": "Blocked Producer Warning Interval"
          },
          "ProducerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of producers attached to this destination"
          },
          "MaxMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Max message size on this destination"
          },
          "UseCache": {
            "rw": true,
            "type": "boolean",
            "desc": "Caching is allowed"
          },
          "SlowConsumerStrategy": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "Optional slowConsumer handler MBean for this destination"
          }
        },
        "class": "org.apache.activemq.broker.jmx.TopicView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,destinationName=ActiveMQ.Advisory.Queue,destinationType=Topic,type=Broker": {
        "op": {
          "browseMessages": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "java.util.List",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "sendTextMessage": [
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination."
            },
            {
              "args": [
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            },
            {
              "args": [
                {
                  "name": "headers",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "body",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "user",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "password",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to a password-protected destination."
            }
          ],
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets statistics."
          },
          "browseAsTable": [
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            },
            {
              "args": [],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "A list of all messages in the destination. Not HTML friendly."
            }
          ],
          "browse": [
            {
              "args": [],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination. Not HTML friendly."
            },
            {
              "args": [
                {
                  "name": "selector",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
            }
          ],
          "sendTextMessageWithProperties": [
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
            },
            {
              "args": [
                {
                  "name": "properties",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "delimiter",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
            }
          ]
        },
        "attr": {
          "ProducerFlowControl": {
            "rw": true,
            "type": "boolean",
            "desc": "Flow control is enabled for producers"
          },
          "Options": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Destination options as name value pairs in a URL queryString"
          },
          "AlwaysRetroactive": {
            "rw": true,
            "type": "boolean",
            "desc": "Always treat consumers as retroactive"
          },
          "MemoryUsageByteCount": {
            "rw": false,
            "type": "long",
            "desc": "Memory used by undelivered messages in bytes"
          },
          "AverageBlockedTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time (ms) messages have been blocked by flow control"
          },
          "MemoryPercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the memory limit used"
          },
          "InFlightCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
          },
          "SendDuplicateFromStoreToDLQ": {
            "rw": false,
            "type": "boolean",
            "desc": "Config setting to send a duplicate from store message to the dead letter queue."
          },
          "Subscriptions": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "Subscription MBeans matching this destination"
          },
          "ForwardCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
          },
          "DLQ": {
            "rw": true,
            "type": "boolean",
            "desc": "Dead Letter Queue"
          },
          "StoreMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "The memory size of all messages in this destination's store."
          },
          "AverageEnqueueTime": {
            "rw": false,
            "type": "double",
            "desc": "Average time a message was held on this destination."
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name of this destination."
          },
          "BlockedSends": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages blocked for flow control"
          },
          "TotalBlockedTime": {
            "rw": false,
            "type": "long",
            "desc": "Total time (ms) messages have been blocked by flow control"
          },
          "MaxAuditDepth": {
            "rw": true,
            "type": "int",
            "desc": "Max audit depth"
          },
          "QueueSize": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
          },
          "MaxPageSize": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of messages to be paged in"
          },
          "TempUsageLimit": {
            "rw": true,
            "type": "long",
            "desc": "Temp usage limit, in bytes, assigned to this destination."
          },
          "PrioritizedMessages": {
            "rw": false,
            "type": "boolean",
            "desc": "Prioritized messages is enabled"
          },
          "MemoryUsagePortion": {
            "rw": true,
            "type": "float",
            "desc": "Portion of memory from the broker memory limit for this destination"
          },
          "EnqueueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been sent to the destination."
          },
          "TempUsagePercentUsage": {
            "rw": false,
            "type": "int",
            "desc": "The percentage of the temp usage limit used"
          },
          "ConsumerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of consumers subscribed to this destination."
          },
          "AverageMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Average message size on this destination"
          },
          "MaxProducersToAudit": {
            "rw": true,
            "type": "int",
            "desc": "Maximum number of producers to audit"
          },
          "ExpiredCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that have been expired."
          },
          "MinEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The shortest time a message was held on this destination"
          },
          "DuplicateFromStoreCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of duplicate messages that have been paged-in from the store."
          },
          "MemoryLimit": {
            "rw": true,
            "type": "long",
            "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
          },
          "MinMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Min message size on this destination"
          },
          "DispatchCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
          },
          "MaxEnqueueTime": {
            "rw": false,
            "type": "long",
            "desc": "The longest time a message was held on this destination"
          },
          "DequeueCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of messages that has been acknowledged (and removed) from the destination."
          },
          "BlockedProducerWarningInterval": {
            "rw": true,
            "type": "long",
            "desc": "Blocked Producer Warning Interval"
          },
          "ProducerCount": {
            "rw": false,
            "type": "long",
            "desc": "Number of producers attached to this destination"
          },
          "MaxMessageSize": {
            "rw": false,
            "type": "long",
            "desc": "Max message size on this destination"
          },
          "UseCache": {
            "rw": true,
            "type": "boolean",
            "desc": "Caching is allowed"
          },
          "SlowConsumerStrategy": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "Optional slowConsumer handler MBean for this destination"
          }
        },
        "class": "org.apache.activemq.broker.jmx.TopicView",
        "desc": "Information on the management interface of the MBean"
      },
      "brokerName=localhost,connector=clientConnectors,connectorName=openwire,type=Broker": {
        "op": {
          "connectionCount": {
            "args": [],
            "ret": "int",
            "desc": "Connection count"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets the statistics"
          },
          "enableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Enables statistics gathering"
          },
          "disableStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Disables statistics gathering"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "StatisticsEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Statistics gathering enabled"
          },
          "UpdateClusterClientsOnRemove": {
            "rw": false,
            "type": "boolean",
            "desc": "Update clients when a broker is removed from a network enabled."
          },
          "RebalanceClusterClients": {
            "rw": false,
            "type": "boolean",
            "desc": "Rebalance clients across the broker cluster enabled"
          },
          "UpdateClusterFilter": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Comma separated list of regex patterns to match broker names for cluster client updates."
          },
          "AllowLinkStealingEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Link Stealing enabled"
          },
          "UpdateClusterClients": {
            "rw": false,
            "type": "boolean",
            "desc": "Update client URL's when brokers leave/join a custer enabled"
          }
        },
        "class": "org.apache.activemq.broker.jmx.ConnectorView",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "com.sun.management": {
      "type=HotSpotDiagnostic": {
        "op": {
          "setVMOption": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setVMOption"
          },
          "getVMOption": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "javax.management.openmbean.CompositeData",
            "desc": "getVMOption"
          },
          "dumpHeap": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "boolean",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "dumpHeap"
          }
        },
        "attr": {
          "DiagnosticOptions": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "DiagnosticOptions"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "com.sun.management.internal.HotSpotDiagnostic",
        "desc": "Information on the management interface of the MBean"
      },
      "type=DiagnosticCommand": {
        "op": {
          "vmUptime": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print VM uptime."
          },
          "jfrDump": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Copies contents of a JFR recording to file. Either the name or the recording id must be specified."
          },
          "jfrStart": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Starts a new JFR recording"
          },
          "gcClassStats": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Provide statistics about Java class meta data."
          },
          "threadPrint": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print all threads with stacktraces."
          },
          "jfrStop": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Stops a JFR recording"
          },
          "vmCheckCommercialFeatures": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Obsolete"
          },
          "compilerCodelist": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print all compiled methods in code cache that are alive"
          },
          "jfrCheck": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Checks running JFR recording(s)"
          },
          "vmSymboltable": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dump symbol table."
          },
          "gcRun": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Call java.lang.System.gc()."
          },
          "vmClassloaders": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Prints classloader hierarchy."
          },
          "vmMetaspace": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Prints the statistics for the metaspace"
          },
          "compilerDirectivesPrint": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print all active compiler directives."
          },
          "vmSetFlag": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sets VM flag option using the provided value."
          },
          "compilerDirectivesAdd": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Add compiler directives from file."
          },
          "vmDynlibs": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print loaded dynamic libraries."
          },
          "vmPrintTouchedMethods": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print all methods that have ever been touched during the lifetime of this JVM."
          },
          "compilerCodecache": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print code cache layout and bounds."
          },
          "vmNativeMemory": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print native memory usage"
          },
          "gcClassHistogram": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Provide statistics about the Java heap usage."
          },
          "gcRunFinalization": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Call java.lang.System.runFinalization()."
          },
          "jvmtiDataDump": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Signal the JVM to do a data-dump request for JVMTI."
          },
          "gcFinalizerInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Provide information about Java finalization queue."
          },
          "vmStringtable": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dump string table."
          },
          "vmUnlockCommercialFeatures": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Obsolete"
          },
          "help": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "For more information about a specific command use 'help <command>'. With no argument this will show a list of available commands. 'help all' will show help for all commands."
          },
          "jfrConfigure": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Configure JFR"
          },
          "vmSystemProperties": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print system properties."
          },
          "compilerDirectivesClear": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Remove all compiler directives."
          },
          "vmSystemdictionary": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Prints the statistics for dictionary hashtable sizes and bucket length"
          },
          "vmClassloaderStats": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print statistics about all ClassLoaders."
          },
          "compilerDirectivesRemove": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Remove latest added compiler directive."
          },
          "gcHeapInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Provide generic Java heap information."
          },
          "compilerCodeHeapAnalytics": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print CodeHeap analytics"
          },
          "vmVersion": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print JVM version information."
          },
          "vmInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print information about JVM environment and status."
          },
          "compilerQueue": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print methods queued for compilation."
          },
          "vmFlags": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print VM flag options and their current values."
          },
          "vmLog": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Lists current log configuration, enables/disables/configures a log output, or rotates all logs."
          },
          "jvmtiAgentLoad": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Load JVMTI native agent."
          },
          "vmClassHierarchy": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print a list of all loaded classes, indented to show the class hiearchy. The name of each class is followed by the ClassLoaderData* of its ClassLoader, or \"null\" if loaded by the bootstrap class loader."
          },
          "vmCommandLine": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print the command line used to start this VM instance."
          }
        },
        "class": "com.sun.management.internal.DiagnosticCommandImpl",
        "desc": "Diagnostic Commands"
      }
    },
    "jmx4perl": {
      "type=Config": {
        "op": {
          "setHistoryEntriesForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetDebugInfo": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetHistoryEntries": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p6",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryEntriesForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "debugInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "HistorySize": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "MaxDebugEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "HistoryMaxEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "Debug": {
            "rw": true,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          }
        },
        "class": "org.jolokia.backend.Config",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "java.nio": {
      "name=direct,type=BufferPool": {
        "attr": {
          "TotalCapacity": {
            "rw": false,
            "type": "long",
            "desc": "TotalCapacity"
          },
          "MemoryUsed": {
            "rw": false,
            "type": "long",
            "desc": "MemoryUsed"
          },
          "Count": {
            "rw": false,
            "type": "long",
            "desc": "Count"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ManagementFactoryHelper$1",
        "desc": "Information on the management interface of the MBean"
      },
      "name=mapped,type=BufferPool": {
        "attr": {
          "TotalCapacity": {
            "rw": false,
            "type": "long",
            "desc": "TotalCapacity"
          },
          "MemoryUsed": {
            "rw": false,
            "type": "long",
            "desc": "MemoryUsed"
          },
          "Count": {
            "rw": false,
            "type": "long",
            "desc": "Count"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ManagementFactoryHelper$1",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "io.fabric8.insight": {
      "type=LogQuery": {
        "op": {
          "getJavaDoc": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          },
          "logResultsSince": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "io.fabric8.insight.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "getSource": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          },
          "logMessage": {
            "args": [
              {
                "name": "p1",
                "type": "org.apache.log4j.spi.LoggingEvent",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "queryLogResults": {
            "args": [
              {
                "name": "p1",
                "type": "io.fabric8.insight.log.LogFilter",
                "desc": ""
              }
            ],
            "ret": "io.fabric8.insight.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "allLogResults": {
            "args": [],
            "ret": "io.fabric8.insight.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "getLogEvents": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          },
          "reconnectAppender": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "jsonQueryLogResults": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "io.fabric8.insight.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "getLogResults": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "io.fabric8.insight.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "filterLogEvents": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "class": "io.fabric8.insight.log.log4j.Log4jLogQuery",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "jolokia": {
      "type=Discovery": {
        "op": {
          "lookupAgentsWithTimeout": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          },
          "lookupAgents": {
            "args": [],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          }
        },
        "class": "org.jolokia.discovery.JolokiaDiscovery",
        "desc": "Information on the management interface of the MBean"
      },
      "type=ServerHandler": {
        "op": {
          "mBeanServersInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "class": "org.jolokia.backend.MBeanServerHandler",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Config": {
        "op": {
          "setHistoryEntriesForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetDebugInfo": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetHistoryEntries": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p6",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryEntriesForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "debugInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "HistorySize": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "MaxDebugEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "HistoryMaxEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "Debug": {
            "rw": true,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          }
        },
        "class": "org.jolokia.backend.Config",
        "desc": "Information on the management interface of the MBean"
      }
    }
  },
  "timestamp": 1747730188,
  "status": 200
}