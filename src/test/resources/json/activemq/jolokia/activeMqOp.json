{
  "org.apache.activemq": {
    "brokerName=localhost,connector=clientConnectors,connectorName=amqp,type=Broker": {
      "op": {
        "connectionCount": {
          "args": [],
          "ret": "int",
          "desc": "Connection count"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets the statistics"
        },
        "enableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Enables statistics gathering"
        },
        "disableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Disables statistics gathering"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "StatisticsEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Statistics gathering enabled"
        },
        "RebalanceClusterClients": {
          "rw": false,
          "type": "boolean",
          "desc": "Rebalance clients across the broker cluster enabled"
        },
        "UpdateClusterClientsOnRemove": {
          "rw": false,
          "type": "boolean",
          "desc": "Update clients when a broker is removed from a network enabled."
        },
        "UpdateClusterFilter": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Comma separated list of regex patterns to match broker names for cluster client updates."
        },
        "AllowLinkStealingEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Link Stealing enabled"
        },
        "UpdateClusterClients": {
          "rw": false,
          "type": "boolean",
          "desc": "Update client URL's when brokers leave/join a custer enabled"
        }
      },
      "class": "org.apache.activemq.broker.jmx.ConnectorView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,destinationName=boot-activemq-queue,destinationType=Topic,type=Broker": {
      "op": {
        "browseMessages": [
          {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          },
          {
            "args": [],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          }
        ],
        "sendTextMessage": [
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          }
        ],
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "browseAsTable": [
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "browse": [
          {
            "args": [],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "sendTextMessageWithProperties": [
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
          },
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "delimiter",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
          }
        ]
      },
      "attr": {
        "ProducerFlowControl": {
          "rw": true,
          "type": "boolean",
          "desc": "Flow control is enabled for producers"
        },
        "Options": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination options as name value pairs in a URL queryString"
        },
        "AlwaysRetroactive": {
          "rw": true,
          "type": "boolean",
          "desc": "Always treat consumers as retroactive"
        },
        "MemoryUsageByteCount": {
          "rw": false,
          "type": "long",
          "desc": "Memory used by undelivered messages in bytes"
        },
        "AverageBlockedTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time (ms) messages have been blocked by flow control"
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the memory limit used"
        },
        "InFlightCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
        },
        "Subscriptions": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Subscription MBeans matching this destination"
        },
        "SendDuplicateFromStoreToDLQ": {
          "rw": false,
          "type": "boolean",
          "desc": "Config setting to send a duplicate from store message to the dead letter queue."
        },
        "ForwardCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
        },
        "DLQ": {
          "rw": true,
          "type": "boolean",
          "desc": "Dead Letter Queue"
        },
        "StoreMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "The memory size of all messages in this destination's store."
        },
        "AverageEnqueueTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time a message was held on this destination."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this destination."
        },
        "MaxAuditDepth": {
          "rw": true,
          "type": "int",
          "desc": "Max audit depth"
        },
        "TotalBlockedTime": {
          "rw": false,
          "type": "long",
          "desc": "Total time (ms) messages have been blocked by flow control"
        },
        "BlockedSends": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages blocked for flow control"
        },
        "QueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
        },
        "MaxPageSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages to be paged in"
        },
        "TempUsageLimit": {
          "rw": true,
          "type": "long",
          "desc": "Temp usage limit, in bytes, assigned to this destination."
        },
        "PrioritizedMessages": {
          "rw": false,
          "type": "boolean",
          "desc": "Prioritized messages is enabled"
        },
        "MemoryUsagePortion": {
          "rw": true,
          "type": "float",
          "desc": "Portion of memory from the broker memory limit for this destination"
        },
        "EnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the destination."
        },
        "TempUsagePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the temp usage limit used"
        },
        "ConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of consumers subscribed to this destination."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this destination"
        },
        "MaxProducersToAudit": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of producers to audit"
        },
        "ExpiredCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been expired."
        },
        "DuplicateFromStoreCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of duplicate messages that have been paged-in from the store."
        },
        "MinEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The shortest time a message was held on this destination"
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this destination"
        },
        "DispatchCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
        },
        "MaxEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The longest time a message was held on this destination"
        },
        "DequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been acknowledged (and removed) from the destination."
        },
        "BlockedProducerWarningInterval": {
          "rw": true,
          "type": "long",
          "desc": "Blocked Producer Warning Interval"
        },
        "ProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of producers attached to this destination"
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this destination"
        },
        "UseCache": {
          "rw": true,
          "type": "boolean",
          "desc": "Caching is allowed"
        },
        "SlowConsumerStrategy": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Optional slowConsumer handler MBean for this destination"
        }
      },
      "class": "org.apache.activemq.broker.jmx.TopicView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,destinationName=TestQueue,destinationType=Queue,type=Broker": {
      "op": {
        "moveMessageTo": {
          "args": [
            {
              "name": "messageId",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "destinationName",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Moves a message with the given JMS message ID into the specified destination."
        },
        "cursorSize": {
          "args": [],
          "ret": "int",
          "desc": "Number of messages available to be paged in by the cursor."
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "resume dispatch to consumers if paused"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "getMessage": {
          "args": [
            {
              "name": "messageId",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "javax.management.openmbean.CompositeData",
          "desc": "View a message from the destination by JMS message ID."
        },
        "purge": {
          "args": [],
          "ret": "void",
          "desc": "Removes all of the messages in the queue."
        },
        "removeMessageGroup": {
          "args": [
            {
              "name": "groupName",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "remove a message group by its groupName"
        },
        "removeAllMessageGroups": {
          "args": [],
          "ret": "void",
          "desc": "emove all the message groups - will rebalance all message groups across consumers"
        },
        "pause": {
          "args": [],
          "ret": "void",
          "desc": "pause dispatch to consumers"
        },
        "removeMessage": {
          "args": [
            {
              "name": "messageId",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Remove a message from the destination by JMS message ID.  If the message has been dispatched, it cannot be deleted and false is returned."
        },
        "removeMatchingMessages": [
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "maximumMessages",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Removes up to a specified number of messages from the destination based on an SQL-92 selection on the message headers or XPATH on the body."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Removes messages from the destination based on an SQL-92 selection on the message headers or XPATH on the body."
          }
        ],
        "doesCursorHaveMessagesBuffered": {
          "args": [],
          "ret": "boolean",
          "desc": "Message cursor has buffered messages to deliver"
        },
        "moveMatchingMessagesTo": [
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "destinationName",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "maximumMessages",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Moves up to a specified number of messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "destinationName",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Moves messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
          }
        ],
        "browseMessages": [
          {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          },
          {
            "args": [],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          }
        ],
        "sendTextMessage": [
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          }
        ],
        "copyMatchingMessagesTo": [
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "destinationName",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "maximumMessages",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Copies up to a specified number of messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "destinationName",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Copies messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
          }
        ],
        "doesCursorHaveSpace": {
          "args": [],
          "ret": "boolean",
          "desc": "Message cursor has memory space available"
        },
        "retryMessage": {
          "args": [
            {
              "name": "messageId",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Moves a message with the given JMS message back to its original destination"
        },
        "browseAsTable": [
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "retryMessages": {
          "args": [],
          "ret": "int",
          "desc": "Retries messages sent to the DLQ"
        },
        "copyMessageTo": {
          "args": [
            {
              "name": "messageId",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "destinationName",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Copies a message with the given JMS message ID into the specified destination."
        },
        "browse": [
          {
            "args": [],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "sendTextMessageWithProperties": [
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
          },
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "delimiter",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
          }
        ]
      },
      "attr": {
        "ProducerFlowControl": {
          "rw": true,
          "type": "boolean",
          "desc": "Flow control is enabled for producers"
        },
        "Options": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination options as name value pairs in a URL queryString"
        },
        "AlwaysRetroactive": {
          "rw": true,
          "type": "boolean",
          "desc": "Always treat consumers as retroactive"
        },
        "MemoryUsageByteCount": {
          "rw": false,
          "type": "long",
          "desc": "Memory used by undelivered messages in bytes"
        },
        "AverageBlockedTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time (ms) messages have been blocked by flow control"
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the memory limit used"
        },
        "CursorMemoryUsage": {
          "rw": false,
          "type": "long",
          "desc": "Message cursor memory usage, in bytes."
        },
        "InFlightCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
        },
        "Subscriptions": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Subscription MBeans matching this destination"
        },
        "SendDuplicateFromStoreToDLQ": {
          "rw": false,
          "type": "boolean",
          "desc": "Config setting to send a duplicate from store message to the dead letter queue."
        },
        "CacheEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Caching is enabled"
        },
        "ForwardCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
        },
        "DLQ": {
          "rw": true,
          "type": "boolean",
          "desc": "Dead Letter Queue"
        },
        "StoreMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "The memory size of all messages in this destination's store."
        },
        "AverageEnqueueTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time a message was held on this destination."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this destination."
        },
        "MaxAuditDepth": {
          "rw": true,
          "type": "int",
          "desc": "Max audit depth"
        },
        "TotalBlockedTime": {
          "rw": false,
          "type": "long",
          "desc": "Total time (ms) messages have been blocked by flow control"
        },
        "BlockedSends": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages blocked for flow control"
        },
        "QueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
        },
        "MaxPageSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages to be paged in"
        },
        "TempUsageLimit": {
          "rw": true,
          "type": "long",
          "desc": "Temp usage limit, in bytes, assigned to this destination."
        },
        "PrioritizedMessages": {
          "rw": false,
          "type": "boolean",
          "desc": "Prioritized messages is enabled"
        },
        "MemoryUsagePortion": {
          "rw": true,
          "type": "float",
          "desc": "Portion of memory from the broker memory limit for this destination"
        },
        "Paused": {
          "rw": false,
          "type": "boolean",
          "desc": "Dispatch to consumers is paused"
        },
        "EnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the destination."
        },
        "MessageGroups": {
          "rw": false,
          "type": "java.util.Map",
          "desc": "Map of groupNames and ConsumerIds"
        },
        "TempUsagePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the temp usage limit used"
        },
        "ConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of consumers subscribed to this destination."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this destination"
        },
        "CursorFull": {
          "rw": false,
          "type": "boolean",
          "desc": "Message cusor has reached its memory limit for paged in messages"
        },
        "MaxProducersToAudit": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of producers to audit"
        },
        "ExpiredCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been expired."
        },
        "CursorPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "Percentage of memory limit used"
        },
        "DuplicateFromStoreCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of duplicate messages that have been paged-in from the store."
        },
        "MinEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The shortest time a message was held on this destination"
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this destination"
        },
        "DispatchCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
        },
        "MaxEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The longest time a message was held on this destination"
        },
        "DequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been acknowledged (and removed) from the destination."
        },
        "BlockedProducerWarningInterval": {
          "rw": true,
          "type": "long",
          "desc": "Blocked Producer Warning Interval"
        },
        "ProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of producers attached to this destination"
        },
        "MessageGroupType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "group  implementation (simple,bucket,cached)"
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this destination"
        },
        "UseCache": {
          "rw": true,
          "type": "boolean",
          "desc": "Caching is allowed"
        },
        "SlowConsumerStrategy": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Optional slowConsumer handler MBean for this destination"
        }
      },
      "class": "org.apache.activemq.broker.jmx.QueueView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,service=Health,type=Broker": {
      "op": {
        "healthList": {
          "args": [],
          "ret": "java.util.List",
          "desc": "List of warnings and errors about the current health of the Broker - empty list is Good!"
        },
        "healthStatus": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "String representation of current Broker state"
        },
        "health": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "CurrentStatus": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "String representation of current Broker state"
        }
      },
      "class": "org.apache.activemq.broker.jmx.HealthView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,destinationName=ActiveMQ.Advisory.Producer.Topic.boot-activemq-topic,destinationType=Topic,type=Broker": {
      "op": {
        "browseMessages": [
          {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          },
          {
            "args": [],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          }
        ],
        "sendTextMessage": [
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          }
        ],
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "browseAsTable": [
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "browse": [
          {
            "args": [],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "sendTextMessageWithProperties": [
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
          },
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "delimiter",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
          }
        ]
      },
      "attr": {
        "ProducerFlowControl": {
          "rw": true,
          "type": "boolean",
          "desc": "Flow control is enabled for producers"
        },
        "Options": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination options as name value pairs in a URL queryString"
        },
        "AlwaysRetroactive": {
          "rw": true,
          "type": "boolean",
          "desc": "Always treat consumers as retroactive"
        },
        "MemoryUsageByteCount": {
          "rw": false,
          "type": "long",
          "desc": "Memory used by undelivered messages in bytes"
        },
        "AverageBlockedTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time (ms) messages have been blocked by flow control"
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the memory limit used"
        },
        "InFlightCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
        },
        "Subscriptions": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Subscription MBeans matching this destination"
        },
        "SendDuplicateFromStoreToDLQ": {
          "rw": false,
          "type": "boolean",
          "desc": "Config setting to send a duplicate from store message to the dead letter queue."
        },
        "ForwardCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
        },
        "DLQ": {
          "rw": true,
          "type": "boolean",
          "desc": "Dead Letter Queue"
        },
        "StoreMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "The memory size of all messages in this destination's store."
        },
        "AverageEnqueueTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time a message was held on this destination."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this destination."
        },
        "MaxAuditDepth": {
          "rw": true,
          "type": "int",
          "desc": "Max audit depth"
        },
        "TotalBlockedTime": {
          "rw": false,
          "type": "long",
          "desc": "Total time (ms) messages have been blocked by flow control"
        },
        "BlockedSends": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages blocked for flow control"
        },
        "QueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
        },
        "MaxPageSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages to be paged in"
        },
        "TempUsageLimit": {
          "rw": true,
          "type": "long",
          "desc": "Temp usage limit, in bytes, assigned to this destination."
        },
        "PrioritizedMessages": {
          "rw": false,
          "type": "boolean",
          "desc": "Prioritized messages is enabled"
        },
        "MemoryUsagePortion": {
          "rw": true,
          "type": "float",
          "desc": "Portion of memory from the broker memory limit for this destination"
        },
        "EnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the destination."
        },
        "TempUsagePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the temp usage limit used"
        },
        "ConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of consumers subscribed to this destination."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this destination"
        },
        "MaxProducersToAudit": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of producers to audit"
        },
        "ExpiredCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been expired."
        },
        "DuplicateFromStoreCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of duplicate messages that have been paged-in from the store."
        },
        "MinEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The shortest time a message was held on this destination"
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this destination"
        },
        "DispatchCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
        },
        "MaxEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The longest time a message was held on this destination"
        },
        "DequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been acknowledged (and removed) from the destination."
        },
        "BlockedProducerWarningInterval": {
          "rw": true,
          "type": "long",
          "desc": "Blocked Producer Warning Interval"
        },
        "ProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of producers attached to this destination"
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this destination"
        },
        "UseCache": {
          "rw": true,
          "type": "boolean",
          "desc": "Caching is allowed"
        },
        "SlowConsumerStrategy": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Optional slowConsumer handler MBean for this destination"
        }
      },
      "class": "org.apache.activemq.broker.jmx.TopicView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,connectionName=tcp_//127.0.0.1_51987,connectionViewType=remoteAddress,connector=clientConnectors,connectorName=openwire,type=Broker": {
      "op": {
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets the statistics"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "RemoteAddress": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "source address for this connection"
        },
        "Producers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "The ObjectNames of all Producers created by this Connection"
        },
        "Active": {
          "rw": false,
          "type": "boolean",
          "desc": "Connection is active (both connected and receiving messages)."
        },
        "UserName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "User Name used to authorize creation of this connection"
        },
        "ActiveTransactionCount": {
          "rw": false,
          "type": "int",
          "desc": "The number of active transactions established on this Connection."
        },
        "DispatchQueueSize": {
          "rw": false,
          "type": "int",
          "desc": "The number of messages pending dispatch"
        },
        "Connected": {
          "rw": false,
          "type": "boolean",
          "desc": "Connection is connected to the broker."
        },
        "Slow": {
          "rw": false,
          "type": "boolean",
          "desc": "Connection is slow."
        },
        "Consumers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "The ObjectNames of all Consumers created by this Connection"
        },
        "ClientId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "client id for this connection"
        },
        "OldestActiveTransactionDuration": {
          "rw": false,
          "type": "java.lang.Long",
          "desc": "The age in ms of the oldest active transaction established on this Connection."
        },
        "Blocked": {
          "rw": false,
          "type": "boolean",
          "desc": "Connection is blocked."
        }
      },
      "class": "org.apache.activemq.broker.jmx.ConnectionView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,type=Broker": {
      "op": {
        "stopGracefully": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "long",
              "desc": ""
            },
            {
              "name": "p4",
              "type": "long",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Poll for queues matching queueName are empty before stopping"
        },
        "addQueue": {
          "args": [
            {
              "name": "name",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Adds a Queue destination to the broker."
        },
        "getTransportConnectorByType": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "The url of transport connector by it's type; e.g. tcp, stomp, ssl, etc."
        },
        "createDurableSubscriber": {
          "args": [
            {
              "name": "clientId",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "subscriberName",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "topicName",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "selector",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "javax.management.ObjectName",
          "desc": "Creates a new durable topic subscriber."
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Reset all broker statistics."
        },
        "restart": {
          "args": [],
          "ret": "void",
          "desc": "Restart the broker and all its components."
        },
        "enableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Enable broker statistics."
        },
        "destroyDurableSubscriber": {
          "args": [
            {
              "name": "clientId",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "subscriberName",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Destroys a durable subscriber."
        },
        "disableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Disable broker statistics."
        },
        "removeTopic": {
          "args": [
            {
              "name": "name",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Removes a Topic destination from the broker."
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "reloadLog4jProperties": {
          "args": [],
          "ret": "void",
          "desc": "Reloads log4j.properties from the classpath."
        },
        "addNetworkConnector": {
          "args": [
            {
              "name": "discoveryAddress",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Adds a Network Connector to the broker."
        },
        "browseQueue": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "[Ljavax.management.openmbean.CompositeData;",
          "desc": "Operation exposed for management"
        },
        "addConnector": {
          "args": [
            {
              "name": "discoveryAddress",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Adds a Connector to the broker."
        },
        "queryTopics": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "int",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Query topics"
        },
        "terminateJVM": {
          "args": [
            {
              "name": "exitCode",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Shuts down the JVM."
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop the broker and all its components."
        },
        "removeQueue": {
          "args": [
            {
              "name": "name",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Removes a Queue destination from the broker."
        },
        "addTopic": {
          "args": [
            {
              "name": "name",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Adds a Topic destination to the broker."
        },
        "removeNetworkConnector": {
          "args": [
            {
              "name": "connectorName",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Removes a Network Connector from the broker."
        },
        "gc": {
          "args": [],
          "ret": "void",
          "desc": "Runs the Garbage Collector."
        },
        "queryQueues": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "int",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Query queues"
        },
        "removeConnector": {
          "args": [
            {
              "name": "connectorName",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Removes a Connector from the broker."
        }
      },
      "attr": {
        "StatisticsEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Broker statistics enabled."
        },
        "TemporaryQueueSubscribers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Temporary Queue Subscribers."
        },
        "TotalConnectionsCount": {
          "rw": false,
          "type": "long",
          "desc": "Attribute exposed for management"
        },
        "TempPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "Percent of temp limit used."
        },
        "TotalMessageCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of unacknowledged messages on the broker."
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "Percent of memory limit used."
        },
        "TransportConnectors": {
          "rw": false,
          "type": "java.util.Map",
          "desc": "The map of all defined transport connectors, with transport name as a key"
        },
        "InactiveDurableTopicSubscribers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Inactive (disconnected persistent) topic subscribers"
        },
        "StoreLimit": {
          "rw": true,
          "type": "long",
          "desc": "Disk limit, in bytes, used for persistent messages before producers are blocked."
        },
        "TotalProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of message producers active on destinations on the broker."
        },
        "TopicProducers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Topic Producers."
        },
        "CurrentConnectionsCount": {
          "rw": false,
          "type": "int",
          "desc": "Attribute exposed for management"
        },
        "QueueProducers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Queue Producers."
        },
        "JMSJobScheduler": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "JMSJobScheduler"
        },
        "VMURL": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The url of the VM connector"
        },
        "UptimeMillis": {
          "rw": false,
          "type": "long",
          "desc": "Uptime of the broker in milliseconds."
        },
        "TemporaryTopicProducers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Temporary Topic Producers."
        },
        "TemporaryQueueProducers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Temporary Queue Producers."
        },
        "TotalDequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been acknowledged or discarded on the broker."
        },
        "Topics": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Topics (broadcasted 'queues'); generally system information."
        },
        "DurableTopicSubscribers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Durable (persistent) topic subscribers"
        },
        "JobSchedulerStorePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "Percent of job store limit used."
        },
        "Uptime": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Uptime of the broker."
        },
        "QueueSubscribers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Queue Subscribers."
        },
        "BrokerId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The unique id of the broker."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this broker"
        },
        "DataDirectory": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The location of the data directory"
        },
        "Persistent": {
          "rw": false,
          "type": "boolean",
          "desc": "Messages are synchronized to disk."
        },
        "TopicSubscribers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Topic Subscribers"
        },
        "TemporaryQueues": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Temporary Queues; generally temporary message response holders."
        },
        "BrokerVersion": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The version of the broker."
        },
        "BrokerName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The name of the broker."
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used for holding undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this broker"
        },
        "Slave": {
          "rw": false,
          "type": "boolean",
          "desc": "Slave broker."
        },
        "DynamicDestinationProducers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Dynamic Destination Producers."
        },
        "TotalEnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the broker."
        },
        "TempLimit": {
          "rw": true,
          "type": "long",
          "desc": "Disk limit, in bytes, used for non-persistent messages and temporary data before producers are blocked."
        },
        "TemporaryTopicSubscribers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Temporary Topic Subscribers."
        },
        "TemporaryTopics": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Temporary Topics; generally unused."
        },
        "JobSchedulerStoreLimit": {
          "rw": true,
          "type": "long",
          "desc": "Disk limit, in bytes, used for scheduled messages before producers are blocked."
        },
        "Queues": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Standard Queues containing AIE messages."
        },
        "StorePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "Percent of store limit used."
        },
        "TotalConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of message consumers subscribed to destinations on the broker."
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this broker"
        }
      },
      "class": "org.apache.activemq.broker.jmx.BrokerView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,connector=clientConnectors,connectorName=mqtt,type=Broker": {
      "op": {
        "connectionCount": {
          "args": [],
          "ret": "int",
          "desc": "Connection count"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets the statistics"
        },
        "enableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Enables statistics gathering"
        },
        "disableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Disables statistics gathering"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "StatisticsEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Statistics gathering enabled"
        },
        "RebalanceClusterClients": {
          "rw": false,
          "type": "boolean",
          "desc": "Rebalance clients across the broker cluster enabled"
        },
        "UpdateClusterClientsOnRemove": {
          "rw": false,
          "type": "boolean",
          "desc": "Update clients when a broker is removed from a network enabled."
        },
        "UpdateClusterFilter": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Comma separated list of regex patterns to match broker names for cluster client updates."
        },
        "AllowLinkStealingEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Link Stealing enabled"
        },
        "UpdateClusterClients": {
          "rw": false,
          "type": "boolean",
          "desc": "Update client URL's when brokers leave/join a custer enabled"
        }
      },
      "class": "org.apache.activemq.broker.jmx.ConnectorView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,destinationName=ActiveMQ.Advisory.MasterBroker,destinationType=Topic,type=Broker": {
      "op": {
        "browseMessages": [
          {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          },
          {
            "args": [],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          }
        ],
        "sendTextMessage": [
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          }
        ],
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "browseAsTable": [
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "browse": [
          {
            "args": [],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "sendTextMessageWithProperties": [
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
          },
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "delimiter",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
          }
        ]
      },
      "attr": {
        "ProducerFlowControl": {
          "rw": true,
          "type": "boolean",
          "desc": "Flow control is enabled for producers"
        },
        "Options": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination options as name value pairs in a URL queryString"
        },
        "AlwaysRetroactive": {
          "rw": true,
          "type": "boolean",
          "desc": "Always treat consumers as retroactive"
        },
        "MemoryUsageByteCount": {
          "rw": false,
          "type": "long",
          "desc": "Memory used by undelivered messages in bytes"
        },
        "AverageBlockedTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time (ms) messages have been blocked by flow control"
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the memory limit used"
        },
        "InFlightCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
        },
        "Subscriptions": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Subscription MBeans matching this destination"
        },
        "SendDuplicateFromStoreToDLQ": {
          "rw": false,
          "type": "boolean",
          "desc": "Config setting to send a duplicate from store message to the dead letter queue."
        },
        "ForwardCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
        },
        "DLQ": {
          "rw": true,
          "type": "boolean",
          "desc": "Dead Letter Queue"
        },
        "StoreMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "The memory size of all messages in this destination's store."
        },
        "AverageEnqueueTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time a message was held on this destination."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this destination."
        },
        "MaxAuditDepth": {
          "rw": true,
          "type": "int",
          "desc": "Max audit depth"
        },
        "TotalBlockedTime": {
          "rw": false,
          "type": "long",
          "desc": "Total time (ms) messages have been blocked by flow control"
        },
        "BlockedSends": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages blocked for flow control"
        },
        "QueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
        },
        "MaxPageSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages to be paged in"
        },
        "TempUsageLimit": {
          "rw": true,
          "type": "long",
          "desc": "Temp usage limit, in bytes, assigned to this destination."
        },
        "PrioritizedMessages": {
          "rw": false,
          "type": "boolean",
          "desc": "Prioritized messages is enabled"
        },
        "MemoryUsagePortion": {
          "rw": true,
          "type": "float",
          "desc": "Portion of memory from the broker memory limit for this destination"
        },
        "EnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the destination."
        },
        "TempUsagePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the temp usage limit used"
        },
        "ConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of consumers subscribed to this destination."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this destination"
        },
        "MaxProducersToAudit": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of producers to audit"
        },
        "ExpiredCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been expired."
        },
        "DuplicateFromStoreCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of duplicate messages that have been paged-in from the store."
        },
        "MinEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The shortest time a message was held on this destination"
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this destination"
        },
        "DispatchCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
        },
        "MaxEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The longest time a message was held on this destination"
        },
        "DequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been acknowledged (and removed) from the destination."
        },
        "BlockedProducerWarningInterval": {
          "rw": true,
          "type": "long",
          "desc": "Blocked Producer Warning Interval"
        },
        "ProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of producers attached to this destination"
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this destination"
        },
        "UseCache": {
          "rw": true,
          "type": "boolean",
          "desc": "Caching is allowed"
        },
        "SlowConsumerStrategy": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Optional slowConsumer handler MBean for this destination"
        }
      },
      "class": "org.apache.activemq.broker.jmx.TopicView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,destinationName=boot-activemq-topic,destinationType=Topic,type=Broker": {
      "op": {
        "browseMessages": [
          {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          },
          {
            "args": [],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          }
        ],
        "sendTextMessage": [
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          }
        ],
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "browseAsTable": [
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "browse": [
          {
            "args": [],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "sendTextMessageWithProperties": [
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
          },
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "delimiter",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
          }
        ]
      },
      "attr": {
        "ProducerFlowControl": {
          "rw": true,
          "type": "boolean",
          "desc": "Flow control is enabled for producers"
        },
        "Options": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination options as name value pairs in a URL queryString"
        },
        "AlwaysRetroactive": {
          "rw": true,
          "type": "boolean",
          "desc": "Always treat consumers as retroactive"
        },
        "MemoryUsageByteCount": {
          "rw": false,
          "type": "long",
          "desc": "Memory used by undelivered messages in bytes"
        },
        "AverageBlockedTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time (ms) messages have been blocked by flow control"
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the memory limit used"
        },
        "InFlightCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
        },
        "Subscriptions": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Subscription MBeans matching this destination"
        },
        "SendDuplicateFromStoreToDLQ": {
          "rw": false,
          "type": "boolean",
          "desc": "Config setting to send a duplicate from store message to the dead letter queue."
        },
        "ForwardCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
        },
        "DLQ": {
          "rw": true,
          "type": "boolean",
          "desc": "Dead Letter Queue"
        },
        "StoreMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "The memory size of all messages in this destination's store."
        },
        "AverageEnqueueTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time a message was held on this destination."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this destination."
        },
        "MaxAuditDepth": {
          "rw": true,
          "type": "int",
          "desc": "Max audit depth"
        },
        "TotalBlockedTime": {
          "rw": false,
          "type": "long",
          "desc": "Total time (ms) messages have been blocked by flow control"
        },
        "BlockedSends": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages blocked for flow control"
        },
        "QueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
        },
        "MaxPageSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages to be paged in"
        },
        "TempUsageLimit": {
          "rw": true,
          "type": "long",
          "desc": "Temp usage limit, in bytes, assigned to this destination."
        },
        "PrioritizedMessages": {
          "rw": false,
          "type": "boolean",
          "desc": "Prioritized messages is enabled"
        },
        "MemoryUsagePortion": {
          "rw": true,
          "type": "float",
          "desc": "Portion of memory from the broker memory limit for this destination"
        },
        "EnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the destination."
        },
        "TempUsagePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the temp usage limit used"
        },
        "ConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of consumers subscribed to this destination."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this destination"
        },
        "MaxProducersToAudit": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of producers to audit"
        },
        "ExpiredCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been expired."
        },
        "DuplicateFromStoreCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of duplicate messages that have been paged-in from the store."
        },
        "MinEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The shortest time a message was held on this destination"
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this destination"
        },
        "DispatchCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
        },
        "MaxEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The longest time a message was held on this destination"
        },
        "DequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been acknowledged (and removed) from the destination."
        },
        "BlockedProducerWarningInterval": {
          "rw": true,
          "type": "long",
          "desc": "Blocked Producer Warning Interval"
        },
        "ProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of producers attached to this destination"
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this destination"
        },
        "UseCache": {
          "rw": true,
          "type": "boolean",
          "desc": "Caching is allowed"
        },
        "SlowConsumerStrategy": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Optional slowConsumer handler MBean for this destination"
        }
      },
      "class": "org.apache.activemq.broker.jmx.TopicView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,connectionName=ID_eleven-51986-1747292087341-0_1,connectionViewType=clientId,connector=clientConnectors,connectorName=openwire,type=Broker": {
      "op": {
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets the statistics"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "RemoteAddress": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "source address for this connection"
        },
        "Producers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "The ObjectNames of all Producers created by this Connection"
        },
        "Active": {
          "rw": false,
          "type": "boolean",
          "desc": "Connection is active (both connected and receiving messages)."
        },
        "UserName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "User Name used to authorize creation of this connection"
        },
        "ActiveTransactionCount": {
          "rw": false,
          "type": "int",
          "desc": "The number of active transactions established on this Connection."
        },
        "DispatchQueueSize": {
          "rw": false,
          "type": "int",
          "desc": "The number of messages pending dispatch"
        },
        "Connected": {
          "rw": false,
          "type": "boolean",
          "desc": "Connection is connected to the broker."
        },
        "Slow": {
          "rw": false,
          "type": "boolean",
          "desc": "Connection is slow."
        },
        "Consumers": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "The ObjectNames of all Consumers created by this Connection"
        },
        "ClientId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "client id for this connection"
        },
        "OldestActiveTransactionDuration": {
          "rw": false,
          "type": "java.lang.Long",
          "desc": "The age in ms of the oldest active transaction established on this Connection."
        },
        "Blocked": {
          "rw": false,
          "type": "boolean",
          "desc": "Connection is blocked."
        }
      },
      "class": "org.apache.activemq.broker.jmx.ConnectionView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,instanceName=KahaDBPersistenceAdapter[E_\\ide\\apache-activemq-5.16.8\\bin\\win64\\..\\..\\data\\kahadb_Index_E_\\ide\\apache-activemq-5.16.8\\bin\\win64\\..\\..\\data\\kahadb],service=PersistenceAdapter,type=Broker": {
      "op": {
        "resetStatistics": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Resets statistics."
        }
      },
      "attr": {
        "Transactions": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Inflight transactions."
        },
        "Size": {
          "rw": false,
          "type": "long",
          "desc": "Current size."
        },
        "Data": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Current data."
        },
        "Statistics": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Statistics related to the PersistentAdapter."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this persistence adapter."
        }
      },
      "class": "org.apache.activemq.broker.jmx.PersistenceAdapterView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,destinationName=boot-activemq-queue,destinationType=Queue,type=Broker": {
      "op": {
        "moveMessageTo": {
          "args": [
            {
              "name": "messageId",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "destinationName",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Moves a message with the given JMS message ID into the specified destination."
        },
        "cursorSize": {
          "args": [],
          "ret": "int",
          "desc": "Number of messages available to be paged in by the cursor."
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "resume dispatch to consumers if paused"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "getMessage": {
          "args": [
            {
              "name": "messageId",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "javax.management.openmbean.CompositeData",
          "desc": "View a message from the destination by JMS message ID."
        },
        "purge": {
          "args": [],
          "ret": "void",
          "desc": "Removes all of the messages in the queue."
        },
        "removeMessageGroup": {
          "args": [
            {
              "name": "groupName",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "remove a message group by its groupName"
        },
        "removeAllMessageGroups": {
          "args": [],
          "ret": "void",
          "desc": "emove all the message groups - will rebalance all message groups across consumers"
        },
        "pause": {
          "args": [],
          "ret": "void",
          "desc": "pause dispatch to consumers"
        },
        "removeMessage": {
          "args": [
            {
              "name": "messageId",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Remove a message from the destination by JMS message ID.  If the message has been dispatched, it cannot be deleted and false is returned."
        },
        "removeMatchingMessages": [
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "maximumMessages",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Removes up to a specified number of messages from the destination based on an SQL-92 selection on the message headers or XPATH on the body."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Removes messages from the destination based on an SQL-92 selection on the message headers or XPATH on the body."
          }
        ],
        "doesCursorHaveMessagesBuffered": {
          "args": [],
          "ret": "boolean",
          "desc": "Message cursor has buffered messages to deliver"
        },
        "moveMatchingMessagesTo": [
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "destinationName",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "maximumMessages",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Moves up to a specified number of messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "destinationName",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Moves messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
          }
        ],
        "browseMessages": [
          {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          },
          {
            "args": [],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          }
        ],
        "sendTextMessage": [
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          }
        ],
        "copyMatchingMessagesTo": [
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "destinationName",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "maximumMessages",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Copies up to a specified number of messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "destinationName",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Copies messages based on an SQL-92 selecton on the message headers or XPATH on the body into the specified destination."
          }
        ],
        "doesCursorHaveSpace": {
          "args": [],
          "ret": "boolean",
          "desc": "Message cursor has memory space available"
        },
        "retryMessage": {
          "args": [
            {
              "name": "messageId",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Moves a message with the given JMS message back to its original destination"
        },
        "browseAsTable": [
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "retryMessages": {
          "args": [],
          "ret": "int",
          "desc": "Retries messages sent to the DLQ"
        },
        "copyMessageTo": {
          "args": [
            {
              "name": "messageId",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "destinationName",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Copies a message with the given JMS message ID into the specified destination."
        },
        "browse": [
          {
            "args": [],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "sendTextMessageWithProperties": [
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
          },
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "delimiter",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
          }
        ]
      },
      "attr": {
        "ProducerFlowControl": {
          "rw": true,
          "type": "boolean",
          "desc": "Flow control is enabled for producers"
        },
        "Options": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination options as name value pairs in a URL queryString"
        },
        "AlwaysRetroactive": {
          "rw": true,
          "type": "boolean",
          "desc": "Always treat consumers as retroactive"
        },
        "MemoryUsageByteCount": {
          "rw": false,
          "type": "long",
          "desc": "Memory used by undelivered messages in bytes"
        },
        "AverageBlockedTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time (ms) messages have been blocked by flow control"
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the memory limit used"
        },
        "CursorMemoryUsage": {
          "rw": false,
          "type": "long",
          "desc": "Message cursor memory usage, in bytes."
        },
        "InFlightCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
        },
        "Subscriptions": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Subscription MBeans matching this destination"
        },
        "SendDuplicateFromStoreToDLQ": {
          "rw": false,
          "type": "boolean",
          "desc": "Config setting to send a duplicate from store message to the dead letter queue."
        },
        "CacheEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Caching is enabled"
        },
        "ForwardCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
        },
        "DLQ": {
          "rw": true,
          "type": "boolean",
          "desc": "Dead Letter Queue"
        },
        "StoreMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "The memory size of all messages in this destination's store."
        },
        "AverageEnqueueTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time a message was held on this destination."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this destination."
        },
        "MaxAuditDepth": {
          "rw": true,
          "type": "int",
          "desc": "Max audit depth"
        },
        "TotalBlockedTime": {
          "rw": false,
          "type": "long",
          "desc": "Total time (ms) messages have been blocked by flow control"
        },
        "BlockedSends": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages blocked for flow control"
        },
        "QueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
        },
        "MaxPageSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages to be paged in"
        },
        "TempUsageLimit": {
          "rw": true,
          "type": "long",
          "desc": "Temp usage limit, in bytes, assigned to this destination."
        },
        "PrioritizedMessages": {
          "rw": false,
          "type": "boolean",
          "desc": "Prioritized messages is enabled"
        },
        "MemoryUsagePortion": {
          "rw": true,
          "type": "float",
          "desc": "Portion of memory from the broker memory limit for this destination"
        },
        "Paused": {
          "rw": false,
          "type": "boolean",
          "desc": "Dispatch to consumers is paused"
        },
        "EnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the destination."
        },
        "MessageGroups": {
          "rw": false,
          "type": "java.util.Map",
          "desc": "Map of groupNames and ConsumerIds"
        },
        "TempUsagePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the temp usage limit used"
        },
        "ConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of consumers subscribed to this destination."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this destination"
        },
        "CursorFull": {
          "rw": false,
          "type": "boolean",
          "desc": "Message cusor has reached its memory limit for paged in messages"
        },
        "MaxProducersToAudit": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of producers to audit"
        },
        "ExpiredCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been expired."
        },
        "CursorPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "Percentage of memory limit used"
        },
        "DuplicateFromStoreCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of duplicate messages that have been paged-in from the store."
        },
        "MinEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The shortest time a message was held on this destination"
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this destination"
        },
        "DispatchCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
        },
        "MaxEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The longest time a message was held on this destination"
        },
        "DequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been acknowledged (and removed) from the destination."
        },
        "BlockedProducerWarningInterval": {
          "rw": true,
          "type": "long",
          "desc": "Blocked Producer Warning Interval"
        },
        "ProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of producers attached to this destination"
        },
        "MessageGroupType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "group  implementation (simple,bucket,cached)"
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this destination"
        },
        "UseCache": {
          "rw": true,
          "type": "boolean",
          "desc": "Caching is allowed"
        },
        "SlowConsumerStrategy": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Optional slowConsumer handler MBean for this destination"
        }
      },
      "class": "org.apache.activemq.broker.jmx.QueueView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,clientId=ID_eleven-51986-1747292087341-0_1,consumerId=ID_eleven-51986-1747292087341-1_1_-1_1,destinationName=ActiveMQ.Advisory.TempQueue_ActiveMQ.Advisory.TempTopic,destinationType=Topic,endpoint=Consumer,type=Broker": {
      "op": {
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "isMatchingTopic": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Returns true if the subscription (which may be using wildcards) matches the given topic name"
        },
        "isMatchingQueue": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Returns true if the subscription (which may be using wildcards) matches the given queue name"
        }
      },
      "attr": {
        "Retroactive": {
          "rw": false,
          "type": "boolean",
          "desc": "The subscriber is retroactive (tries to receive broadcasted topic messages sent prior to connecting)"
        },
        "Exclusive": {
          "rw": false,
          "type": "boolean",
          "desc": "The subscriber is exclusive (no other subscribers may receive messages from the destination as long as this one is)"
        },
        "SlowConsumer": {
          "rw": false,
          "type": "boolean",
          "desc": "Returns true if the subscription is slow"
        },
        "DispatchAsync": {
          "rw": false,
          "type": "boolean",
          "desc": "Is the consumer configured for Async Dispatch"
        },
        "DestinationTemporary": {
          "rw": false,
          "type": "boolean",
          "desc": "Subscription is on a temporary Queue/Topic"
        },
        "MaximumPendingMessageLimit": {
          "rw": false,
          "type": "int",
          "desc": "The maximum number of pending messages allowed (in addition to the prefetch size)."
        },
        "ConnectionId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "ID of the Connection the Subscription is on."
        },
        "SubscriptionId": {
          "rw": false,
          "type": "long",
          "desc": "ID of the Subscription."
        },
        "Network": {
          "rw": false,
          "type": "boolean",
          "desc": "Subscription was created by a demand-forwarding network bridge"
        },
        "DestinationName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The name of the destination the subscription is on."
        },
        "ClientId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "JMS Client id of the Connection the Subscription is on."
        },
        "DestinationQueue": {
          "rw": false,
          "type": "boolean",
          "desc": "Subscription is on a Queue"
        },
        "SessionId": {
          "rw": false,
          "type": "long",
          "desc": "ID of the Session the Subscription is on."
        },
        "EnqueueCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that matched the subscription."
        },
        "Selector": {
          "rw": true,
          "type": "java.lang.String",
          "desc": "The SQL-92 message header selector or XPATH body selector of the subscription."
        },
        "DestinationTopic": {
          "rw": false,
          "type": "boolean",
          "desc": "Subscription is on a Topic"
        },
        "UserName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "User Name used to authorize creation of this Subscription"
        },
        "DispatchedQueueSize": {
          "rw": false,
          "type": "int",
          "desc": "Number of messages dispatched awaiting acknowledgement."
        },
        "Priority": {
          "rw": false,
          "type": "byte",
          "desc": "The subscription priority"
        },
        "PendingQueueSize": {
          "rw": false,
          "type": "int",
          "desc": "Number of messages pending delivery."
        },
        "Connection": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName of the Connection that created this Subscription"
        },
        "MessageCountAwaitingAcknowledge": {
          "rw": false,
          "type": "int",
          "desc": "Number of messages dispatched awaiting acknowledgement."
        },
        "SubscriptionName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The name of the subscription (durable subscriptions only)."
        },
        "PrefetchSize": {
          "rw": false,
          "type": "int",
          "desc": "Number of messages to pre-fetch and dispatch to the client."
        },
        "MaximumPendingQueueSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages that can be pending"
        },
        "Active": {
          "rw": false,
          "type": "boolean",
          "desc": "Subscription is active (connected and receiving messages)."
        },
        "DiscardedCount": {
          "rw": false,
          "type": "int",
          "desc": "Number of messages discared due to being a slow consumer"
        },
        "NoLocal": {
          "rw": false,
          "type": "boolean",
          "desc": "The subscription ignores local messages."
        },
        "Durable": {
          "rw": false,
          "type": "boolean",
          "desc": "The subscription is persistent."
        },
        "DequeueCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages were sent to and acknowledge by the client."
        },
        "ConsumedCount": {
          "rw": false,
          "type": "long",
          "desc": "Messages consumed"
        },
        "DispatchedCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that sent to the client."
        }
      },
      "class": "org.apache.activemq.broker.jmx.TopicSubscriptionView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,connector=clientConnectors,connectorName=ws,type=Broker": {
      "op": {
        "connectionCount": {
          "args": [],
          "ret": "int",
          "desc": "Connection count"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets the statistics"
        },
        "enableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Enables statistics gathering"
        },
        "disableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Disables statistics gathering"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "StatisticsEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Statistics gathering enabled"
        },
        "RebalanceClusterClients": {
          "rw": false,
          "type": "boolean",
          "desc": "Rebalance clients across the broker cluster enabled"
        },
        "UpdateClusterClientsOnRemove": {
          "rw": false,
          "type": "boolean",
          "desc": "Update clients when a broker is removed from a network enabled."
        },
        "UpdateClusterFilter": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Comma separated list of regex patterns to match broker names for cluster client updates."
        },
        "AllowLinkStealingEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Link Stealing enabled"
        },
        "UpdateClusterClients": {
          "rw": false,
          "type": "boolean",
          "desc": "Update client URL's when brokers leave/join a custer enabled"
        }
      },
      "class": "org.apache.activemq.broker.jmx.ConnectorView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,connector=clientConnectors,connectorName=stomp,type=Broker": {
      "op": {
        "connectionCount": {
          "args": [],
          "ret": "int",
          "desc": "Connection count"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets the statistics"
        },
        "enableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Enables statistics gathering"
        },
        "disableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Disables statistics gathering"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "StatisticsEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Statistics gathering enabled"
        },
        "RebalanceClusterClients": {
          "rw": false,
          "type": "boolean",
          "desc": "Rebalance clients across the broker cluster enabled"
        },
        "UpdateClusterClientsOnRemove": {
          "rw": false,
          "type": "boolean",
          "desc": "Update clients when a broker is removed from a network enabled."
        },
        "UpdateClusterFilter": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Comma separated list of regex patterns to match broker names for cluster client updates."
        },
        "AllowLinkStealingEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Link Stealing enabled"
        },
        "UpdateClusterClients": {
          "rw": false,
          "type": "boolean",
          "desc": "Update client URL's when brokers leave/join a custer enabled"
        }
      },
      "class": "org.apache.activemq.broker.jmx.ConnectorView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,destinationName=ActiveMQ.Advisory.Connection,destinationType=Topic,type=Broker": {
      "op": {
        "browseMessages": [
          {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          },
          {
            "args": [],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          }
        ],
        "sendTextMessage": [
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          }
        ],
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "browseAsTable": [
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "browse": [
          {
            "args": [],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "sendTextMessageWithProperties": [
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
          },
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "delimiter",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
          }
        ]
      },
      "attr": {
        "ProducerFlowControl": {
          "rw": true,
          "type": "boolean",
          "desc": "Flow control is enabled for producers"
        },
        "Options": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination options as name value pairs in a URL queryString"
        },
        "AlwaysRetroactive": {
          "rw": true,
          "type": "boolean",
          "desc": "Always treat consumers as retroactive"
        },
        "MemoryUsageByteCount": {
          "rw": false,
          "type": "long",
          "desc": "Memory used by undelivered messages in bytes"
        },
        "AverageBlockedTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time (ms) messages have been blocked by flow control"
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the memory limit used"
        },
        "InFlightCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
        },
        "Subscriptions": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Subscription MBeans matching this destination"
        },
        "SendDuplicateFromStoreToDLQ": {
          "rw": false,
          "type": "boolean",
          "desc": "Config setting to send a duplicate from store message to the dead letter queue."
        },
        "ForwardCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
        },
        "DLQ": {
          "rw": true,
          "type": "boolean",
          "desc": "Dead Letter Queue"
        },
        "StoreMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "The memory size of all messages in this destination's store."
        },
        "AverageEnqueueTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time a message was held on this destination."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this destination."
        },
        "MaxAuditDepth": {
          "rw": true,
          "type": "int",
          "desc": "Max audit depth"
        },
        "TotalBlockedTime": {
          "rw": false,
          "type": "long",
          "desc": "Total time (ms) messages have been blocked by flow control"
        },
        "BlockedSends": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages blocked for flow control"
        },
        "QueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
        },
        "MaxPageSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages to be paged in"
        },
        "TempUsageLimit": {
          "rw": true,
          "type": "long",
          "desc": "Temp usage limit, in bytes, assigned to this destination."
        },
        "PrioritizedMessages": {
          "rw": false,
          "type": "boolean",
          "desc": "Prioritized messages is enabled"
        },
        "MemoryUsagePortion": {
          "rw": true,
          "type": "float",
          "desc": "Portion of memory from the broker memory limit for this destination"
        },
        "EnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the destination."
        },
        "TempUsagePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the temp usage limit used"
        },
        "ConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of consumers subscribed to this destination."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this destination"
        },
        "MaxProducersToAudit": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of producers to audit"
        },
        "ExpiredCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been expired."
        },
        "DuplicateFromStoreCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of duplicate messages that have been paged-in from the store."
        },
        "MinEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The shortest time a message was held on this destination"
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this destination"
        },
        "DispatchCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
        },
        "MaxEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The longest time a message was held on this destination"
        },
        "DequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been acknowledged (and removed) from the destination."
        },
        "BlockedProducerWarningInterval": {
          "rw": true,
          "type": "long",
          "desc": "Blocked Producer Warning Interval"
        },
        "ProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of producers attached to this destination"
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this destination"
        },
        "UseCache": {
          "rw": true,
          "type": "boolean",
          "desc": "Caching is allowed"
        },
        "SlowConsumerStrategy": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Optional slowConsumer handler MBean for this destination"
        }
      },
      "class": "org.apache.activemq.broker.jmx.TopicView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,service=Log4JConfiguration,type=Broker": {
      "op": {
        "setLogLevel": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Sets the logging level for the named logger."
        },
        "getLogLevel": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Returns the current logging level of a named logger."
        },
        "reloadLog4jProperties": {
          "args": [],
          "ret": "void",
          "desc": "Reloads log4j.properties from the classpath."
        }
      },
      "attr": {
        "RootLogLevel": {
          "rw": true,
          "type": "java.lang.String",
          "desc": "Returns the current logging level of the root logger."
        },
        "Loggers": {
          "rw": false,
          "type": "java.util.List",
          "desc": "List of all loggers that are available for configuration."
        }
      },
      "class": "org.apache.activemq.broker.jmx.Log4JConfigView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,clientId=,consumerId=Durable(_TestSub),destinationName=TestTopic,destinationType=Topic,endpoint=Consumer,type=Broker": {
      "op": {
        "cursorSize": {
          "args": [],
          "ret": "int",
          "desc": "Operation exposed for management"
        },
        "doesCursorHaveMessagesBuffered": {
          "args": [],
          "ret": "boolean",
          "desc": "Operation exposed for management"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "isMatchingTopic": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Operation exposed for management"
        },
        "browseAsTable": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "Operation exposed for management"
        },
        "doesCursorHaveSpace": {
          "args": [],
          "ret": "boolean",
          "desc": "Operation exposed for management"
        },
        "destroy": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "browse": {
          "args": [],
          "ret": "[Ljavax.management.openmbean.CompositeData;",
          "desc": "Operation exposed for management"
        },
        "removeMessage": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "isMatchingQueue": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "Retroactive": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "CursorMemoryUsage": {
          "rw": false,
          "type": "long",
          "desc": "Attribute exposed for management"
        },
        "Exclusive": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "SlowConsumer": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "DispatchAsync": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "DestinationTemporary": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "MaximumPendingMessageLimit": {
          "rw": false,
          "type": "int",
          "desc": "Attribute exposed for management"
        },
        "ConnectionId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Attribute exposed for management"
        },
        "SubscriptionId": {
          "rw": false,
          "type": "long",
          "desc": "Attribute exposed for management"
        },
        "Network": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "DestinationName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Attribute exposed for management"
        },
        "ClientId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Attribute exposed for management"
        },
        "DestinationQueue": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "SessionId": {
          "rw": false,
          "type": "long",
          "desc": "Attribute exposed for management"
        },
        "EnqueueCounter": {
          "rw": false,
          "type": "long",
          "desc": "Attribute exposed for management"
        },
        "Selector": {
          "rw": true,
          "type": "java.lang.String",
          "desc": "Attribute exposed for management"
        },
        "DestinationTopic": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "UserName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Attribute exposed for management"
        },
        "CursorFull": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "DispatchedQueueSize": {
          "rw": false,
          "type": "int",
          "desc": "Attribute exposed for management"
        },
        "Priority": {
          "rw": false,
          "type": "byte",
          "desc": "Attribute exposed for management"
        },
        "PendingQueueSize": {
          "rw": false,
          "type": "int",
          "desc": "Attribute exposed for management"
        },
        "Connection": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Attribute exposed for management"
        },
        "MessageCountAwaitingAcknowledge": {
          "rw": false,
          "type": "int",
          "desc": "Attribute exposed for management"
        },
        "SubscriptionName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Attribute exposed for management"
        },
        "PrefetchSize": {
          "rw": false,
          "type": "int",
          "desc": "Attribute exposed for management"
        },
        "CursorPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "Attribute exposed for management"
        },
        "Active": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "NoLocal": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "Durable": {
          "rw": false,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        },
        "DequeueCounter": {
          "rw": false,
          "type": "long",
          "desc": "Attribute exposed for management"
        },
        "ConsumedCount": {
          "rw": false,
          "type": "long",
          "desc": "Attribute exposed for management"
        },
        "DispatchedCounter": {
          "rw": false,
          "type": "long",
          "desc": "Attribute exposed for management"
        }
      },
      "class": "org.apache.activemq.broker.jmx.InactiveDurableSubscriptionView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,destinationName=TestTopic,destinationType=Topic,type=Broker": {
      "op": {
        "browseMessages": [
          {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          },
          {
            "args": [],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          }
        ],
        "sendTextMessage": [
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          }
        ],
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "browseAsTable": [
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "browse": [
          {
            "args": [],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "sendTextMessageWithProperties": [
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
          },
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "delimiter",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
          }
        ]
      },
      "attr": {
        "ProducerFlowControl": {
          "rw": true,
          "type": "boolean",
          "desc": "Flow control is enabled for producers"
        },
        "Options": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination options as name value pairs in a URL queryString"
        },
        "AlwaysRetroactive": {
          "rw": true,
          "type": "boolean",
          "desc": "Always treat consumers as retroactive"
        },
        "MemoryUsageByteCount": {
          "rw": false,
          "type": "long",
          "desc": "Memory used by undelivered messages in bytes"
        },
        "AverageBlockedTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time (ms) messages have been blocked by flow control"
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the memory limit used"
        },
        "InFlightCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
        },
        "Subscriptions": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Subscription MBeans matching this destination"
        },
        "SendDuplicateFromStoreToDLQ": {
          "rw": false,
          "type": "boolean",
          "desc": "Config setting to send a duplicate from store message to the dead letter queue."
        },
        "ForwardCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
        },
        "DLQ": {
          "rw": true,
          "type": "boolean",
          "desc": "Dead Letter Queue"
        },
        "StoreMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "The memory size of all messages in this destination's store."
        },
        "AverageEnqueueTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time a message was held on this destination."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this destination."
        },
        "MaxAuditDepth": {
          "rw": true,
          "type": "int",
          "desc": "Max audit depth"
        },
        "TotalBlockedTime": {
          "rw": false,
          "type": "long",
          "desc": "Total time (ms) messages have been blocked by flow control"
        },
        "BlockedSends": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages blocked for flow control"
        },
        "QueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
        },
        "MaxPageSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages to be paged in"
        },
        "TempUsageLimit": {
          "rw": true,
          "type": "long",
          "desc": "Temp usage limit, in bytes, assigned to this destination."
        },
        "PrioritizedMessages": {
          "rw": false,
          "type": "boolean",
          "desc": "Prioritized messages is enabled"
        },
        "MemoryUsagePortion": {
          "rw": true,
          "type": "float",
          "desc": "Portion of memory from the broker memory limit for this destination"
        },
        "EnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the destination."
        },
        "TempUsagePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the temp usage limit used"
        },
        "ConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of consumers subscribed to this destination."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this destination"
        },
        "MaxProducersToAudit": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of producers to audit"
        },
        "ExpiredCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been expired."
        },
        "DuplicateFromStoreCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of duplicate messages that have been paged-in from the store."
        },
        "MinEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The shortest time a message was held on this destination"
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this destination"
        },
        "DispatchCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
        },
        "MaxEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The longest time a message was held on this destination"
        },
        "DequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been acknowledged (and removed) from the destination."
        },
        "BlockedProducerWarningInterval": {
          "rw": true,
          "type": "long",
          "desc": "Blocked Producer Warning Interval"
        },
        "ProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of producers attached to this destination"
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this destination"
        },
        "UseCache": {
          "rw": true,
          "type": "boolean",
          "desc": "Caching is allowed"
        },
        "SlowConsumerStrategy": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Optional slowConsumer handler MBean for this destination"
        }
      },
      "class": "org.apache.activemq.broker.jmx.TopicView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,destinationName=ActiveMQ.Advisory.Topic,destinationType=Topic,type=Broker": {
      "op": {
        "browseMessages": [
          {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          },
          {
            "args": [],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          }
        ],
        "sendTextMessage": [
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          }
        ],
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "browseAsTable": [
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "browse": [
          {
            "args": [],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "sendTextMessageWithProperties": [
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
          },
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "delimiter",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
          }
        ]
      },
      "attr": {
        "ProducerFlowControl": {
          "rw": true,
          "type": "boolean",
          "desc": "Flow control is enabled for producers"
        },
        "Options": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination options as name value pairs in a URL queryString"
        },
        "AlwaysRetroactive": {
          "rw": true,
          "type": "boolean",
          "desc": "Always treat consumers as retroactive"
        },
        "MemoryUsageByteCount": {
          "rw": false,
          "type": "long",
          "desc": "Memory used by undelivered messages in bytes"
        },
        "AverageBlockedTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time (ms) messages have been blocked by flow control"
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the memory limit used"
        },
        "InFlightCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
        },
        "Subscriptions": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Subscription MBeans matching this destination"
        },
        "SendDuplicateFromStoreToDLQ": {
          "rw": false,
          "type": "boolean",
          "desc": "Config setting to send a duplicate from store message to the dead letter queue."
        },
        "ForwardCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
        },
        "DLQ": {
          "rw": true,
          "type": "boolean",
          "desc": "Dead Letter Queue"
        },
        "StoreMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "The memory size of all messages in this destination's store."
        },
        "AverageEnqueueTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time a message was held on this destination."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this destination."
        },
        "MaxAuditDepth": {
          "rw": true,
          "type": "int",
          "desc": "Max audit depth"
        },
        "TotalBlockedTime": {
          "rw": false,
          "type": "long",
          "desc": "Total time (ms) messages have been blocked by flow control"
        },
        "BlockedSends": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages blocked for flow control"
        },
        "QueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
        },
        "MaxPageSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages to be paged in"
        },
        "TempUsageLimit": {
          "rw": true,
          "type": "long",
          "desc": "Temp usage limit, in bytes, assigned to this destination."
        },
        "PrioritizedMessages": {
          "rw": false,
          "type": "boolean",
          "desc": "Prioritized messages is enabled"
        },
        "MemoryUsagePortion": {
          "rw": true,
          "type": "float",
          "desc": "Portion of memory from the broker memory limit for this destination"
        },
        "EnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the destination."
        },
        "TempUsagePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the temp usage limit used"
        },
        "ConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of consumers subscribed to this destination."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this destination"
        },
        "MaxProducersToAudit": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of producers to audit"
        },
        "ExpiredCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been expired."
        },
        "DuplicateFromStoreCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of duplicate messages that have been paged-in from the store."
        },
        "MinEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The shortest time a message was held on this destination"
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this destination"
        },
        "DispatchCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
        },
        "MaxEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The longest time a message was held on this destination"
        },
        "DequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been acknowledged (and removed) from the destination."
        },
        "BlockedProducerWarningInterval": {
          "rw": true,
          "type": "long",
          "desc": "Blocked Producer Warning Interval"
        },
        "ProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of producers attached to this destination"
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this destination"
        },
        "UseCache": {
          "rw": true,
          "type": "boolean",
          "desc": "Caching is allowed"
        },
        "SlowConsumerStrategy": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Optional slowConsumer handler MBean for this destination"
        }
      },
      "class": "org.apache.activemq.broker.jmx.TopicView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,destinationName=ActiveMQ.Advisory.Queue,destinationType=Topic,type=Broker": {
      "op": {
        "browseMessages": [
          {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          },
          {
            "args": [],
            "ret": "java.util.List",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          }
        ],
        "sendTextMessage": [
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "user",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "password",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to a password-protected destination."
          },
          {
            "args": [
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          },
          {
            "args": [
              {
                "name": "headers",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "body",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination."
          }
        ],
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets statistics."
        },
        "browseAsTable": [
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "A list of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "browse": [
          {
            "args": [],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination. Not HTML friendly."
          },
          {
            "args": [
              {
                "name": "selector",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "An array of all messages in the destination based on an SQL-92 selection on the message headers or XPATH on the body. Not HTML friendly."
          }
        ],
        "sendTextMessageWithProperties": [
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using comma separeted properties list. Example properties: body=value,header=value"
          },
          {
            "args": [
              {
                "name": "properties",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "delimiter",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sends a TextMessage to the destination using properties separeted by arbetrary delimiter. Example properties: body=value;header=value"
          }
        ]
      },
      "attr": {
        "ProducerFlowControl": {
          "rw": true,
          "type": "boolean",
          "desc": "Flow control is enabled for producers"
        },
        "Options": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination options as name value pairs in a URL queryString"
        },
        "AlwaysRetroactive": {
          "rw": true,
          "type": "boolean",
          "desc": "Always treat consumers as retroactive"
        },
        "MemoryUsageByteCount": {
          "rw": false,
          "type": "long",
          "desc": "Memory used by undelivered messages in bytes"
        },
        "AverageBlockedTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time (ms) messages have been blocked by flow control"
        },
        "MemoryPercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the memory limit used"
        },
        "InFlightCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been dispatched to, but not acknowledged by, consumers."
        },
        "Subscriptions": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "Subscription MBeans matching this destination"
        },
        "SendDuplicateFromStoreToDLQ": {
          "rw": false,
          "type": "boolean",
          "desc": "Config setting to send a duplicate from store message to the dead letter queue."
        },
        "ForwardCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been forwarded (to a networked broker) from the destination."
        },
        "DLQ": {
          "rw": true,
          "type": "boolean",
          "desc": "Dead Letter Queue"
        },
        "StoreMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "The memory size of all messages in this destination's store."
        },
        "AverageEnqueueTime": {
          "rw": false,
          "type": "double",
          "desc": "Average time a message was held on this destination."
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name of this destination."
        },
        "MaxAuditDepth": {
          "rw": true,
          "type": "int",
          "desc": "Max audit depth"
        },
        "TotalBlockedTime": {
          "rw": false,
          "type": "long",
          "desc": "Total time (ms) messages have been blocked by flow control"
        },
        "BlockedSends": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages blocked for flow control"
        },
        "QueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages on this destination, including any that have been dispatched but not acknowledged"
        },
        "MaxPageSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of messages to be paged in"
        },
        "TempUsageLimit": {
          "rw": true,
          "type": "long",
          "desc": "Temp usage limit, in bytes, assigned to this destination."
        },
        "PrioritizedMessages": {
          "rw": false,
          "type": "boolean",
          "desc": "Prioritized messages is enabled"
        },
        "MemoryUsagePortion": {
          "rw": true,
          "type": "float",
          "desc": "Portion of memory from the broker memory limit for this destination"
        },
        "EnqueueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been sent to the destination."
        },
        "TempUsagePercentUsage": {
          "rw": false,
          "type": "int",
          "desc": "The percentage of the temp usage limit used"
        },
        "ConsumerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of consumers subscribed to this destination."
        },
        "AverageMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average message size on this destination"
        },
        "MaxProducersToAudit": {
          "rw": true,
          "type": "int",
          "desc": "Maximum number of producers to audit"
        },
        "ExpiredCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that have been expired."
        },
        "DuplicateFromStoreCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of duplicate messages that have been paged-in from the store."
        },
        "MinEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The shortest time a message was held on this destination"
        },
        "MemoryLimit": {
          "rw": true,
          "type": "long",
          "desc": "Memory limit, in bytes, used by undelivered messages before paging to temporary storage."
        },
        "MinMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Min message size on this destination"
        },
        "DispatchCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been delivered to consumers, including those not acknowledged"
        },
        "MaxEnqueueTime": {
          "rw": false,
          "type": "long",
          "desc": "The longest time a message was held on this destination"
        },
        "DequeueCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of messages that has been acknowledged (and removed) from the destination."
        },
        "BlockedProducerWarningInterval": {
          "rw": true,
          "type": "long",
          "desc": "Blocked Producer Warning Interval"
        },
        "ProducerCount": {
          "rw": false,
          "type": "long",
          "desc": "Number of producers attached to this destination"
        },
        "MaxMessageSize": {
          "rw": false,
          "type": "long",
          "desc": "Max message size on this destination"
        },
        "UseCache": {
          "rw": true,
          "type": "boolean",
          "desc": "Caching is allowed"
        },
        "SlowConsumerStrategy": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "Optional slowConsumer handler MBean for this destination"
        }
      },
      "class": "org.apache.activemq.broker.jmx.TopicView",
      "desc": "Information on the management interface of the MBean"
    },
    "brokerName=localhost,connector=clientConnectors,connectorName=openwire,type=Broker": {
      "op": {
        "connectionCount": {
          "args": [],
          "ret": "int",
          "desc": "Connection count"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets the statistics"
        },
        "enableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Enables statistics gathering"
        },
        "disableStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Disables statistics gathering"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "StatisticsEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Statistics gathering enabled"
        },
        "RebalanceClusterClients": {
          "rw": false,
          "type": "boolean",
          "desc": "Rebalance clients across the broker cluster enabled"
        },
        "UpdateClusterClientsOnRemove": {
          "rw": false,
          "type": "boolean",
          "desc": "Update clients when a broker is removed from a network enabled."
        },
        "UpdateClusterFilter": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Comma separated list of regex patterns to match broker names for cluster client updates."
        },
        "AllowLinkStealingEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Link Stealing enabled"
        },
        "UpdateClusterClients": {
          "rw": false,
          "type": "boolean",
          "desc": "Update client URL's when brokers leave/join a custer enabled"
        }
      },
      "class": "org.apache.activemq.broker.jmx.ConnectorView",
      "desc": "Information on the management interface of the MBean"
    }
  }
}